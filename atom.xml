<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>岚</title>
  <icon>https://www.gravatar.com/avatar/0e57272b72bf1a283c89417a9bc99517</icon>
  <subtitle>Talk to myself.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://liyuankun.top/"/>
  <updated>2025-08-11T09:22:24.730Z</updated>
  <id>http://liyuankun.top/</id>
  
  <author>
    <name>Yuankun Li</name>
    <email>muzilan1@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>程序猿的那些好用工具</title>
    <link href="http://liyuankun.top/awesome-tools.html"/>
    <id>http://liyuankun.top/awesome-tools.html</id>
    <published>2025-08-11T09:22:24.730Z</published>
    <updated>2025-08-11T09:22:24.730Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本文在<a href="https://github.com/sorrycc/awesome-tools" target="_blank" rel="noopener">awesome-tools</a>基础上修改，添加自己使用的工具。有些是我也已经用的软件，有些是根据这篇文章才开始用的。</p><blockquote><p>从 <a href="https://github.com/sorrycc/blog/issues/83" target="_blank" rel="noopener">Blog</a> 迁移到 GitHub 仓库维护，可以有历史记录。</p></blockquote><h1 id="翻墙">翻墙</h1><p>主 <a href="https://home.rixcloud.me/aff.php?aff=1432" target="_blank" rel="noopener"><strong>rixcloud</strong></a>，备<strong>阿里云香港</strong>和<strong>公司翻墙</strong>。</p><ul><li>[ ] rixcloud 比较稳，特殊时期也能用，支持 surge 客户端，支持 netflix</li><li>[ ] 软件方面，Mac 下用 <a href="https://github.com/qinyuhang/ShadowsocksX-NG-R/releases" target="_blank" rel="noopener"><strong>ShadowsocksX-NG-R</strong></a>，iPhone 下用 <a href="https://itunes.apple.com/us/app/shadowrocket/id932747118?mt=8" target="_blank" rel="noopener"><strong>ShadowRocket</strong></a>（切美区下载）</li><li>[ ] 通过 <a href="https://www.proxifier.com/" target="_blank" rel="noopener"><strong>Proxifier</strong></a> 实现命令行应用或其他应用翻墙，比如 iTerm2 下执行 npm publish 偶尔会被墙，并且实测下来比 <code>export http_proxy</code> 快</li><li>[ ] 家里的路由器翻墙是用 <a href="https://www.asus.com/us/Networking/RT-AC88U/" target="_blank" rel="noopener"><strong>RT-AC88U</strong></a> + <strong>梅林小宝版固件</strong></li><li>[ ] 电视上看 youtube 和 netflix 可以用 <a href="https://www.nvidia.com/en-us/shield/" target="_blank" rel="noopener"><strong>Nvidia Shield TV</strong></a>，我买的美版，据说国版也可刷原生系统</li></ul><h1 id="mac-软件">Mac 软件</h1><ul><li>[ ] 用了 <a href="https://go.setapp.com/invite/sorrycc" target="_blank" rel="noopener">SetApp</a>，包含以下的不少付费应用，能省不少钱。</li></ul><h2 id="编辑器">编辑器</h2><ul><li>主 <a href="https://code.visualstudio.com/" target="_blank" rel="noopener"><strong>VSCode</strong></a> + <a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener"><strong>IntelliJ</strong></a></li><li>辅 <a href="https://www.jetbrains.com/webstorm/" target="_blank" rel="noopener"><strong>WebStorm</strong></a>和 <strong>Vim</strong>。如果没有时间去折腾插件，那就选 WebStorm， 无需安装插件就很好用。</li></ul><!-- - [ ] 字体用 [**Dank Mono**](https://dank.sh/) 和 [**Operator Mono**](http://www.typography.com/fonts/operator/overview/)，轮着用，看厌一个切另一个- [ ] WebStorm 使用 [**material-theme-jetbrains**](https://github.com/ChrisRM/material-theme-jetbrains)，Theme 选 Material One Dark，字号 16 号，行距 1.2，[效果图](https://gw.alipayobjects.com/zos/rmsportal/JKRPNvvHhPgFonHHXvPe.png)- [ ] WebStorm 插件额外装了 **File Watchers**、**GitLink**、**Import Cost**、**Prettier** 和 **Rainbow Brackets** --><ul><li>[x] <a href="http://liyuankun.top/Vscode-%E9%85%8D%E7%BD%AE%E5%92%8C%E6%8F%92%E4%BB%B6.html">Vscode 配置和插件</a>。</li></ul><h2 id="terminal">Terminal</h2><ul><li>[x] Terminal 用 <a href="https://www.iterm2.com/" target="_blank" rel="noopener"><strong>iTerm2</strong></a> + <a href="https://en.wikipedia.org/wiki/Z_shell" target="_blank" rel="noopener"><strong>zsh</strong></a> + <a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener"><strong>oh-my-zsh</strong></a> 的组合，主题是 <a href="https://github.com/robbyrussell/oh-my-zsh/blob/master/themes/robbyrussell.zsh-theme" target="_blank" rel="noopener">robbyrussell</a></li><li>[x] zsh 的插件开了 git、autojump、brew、git、git-extra、git-flow、git-prompt、git-remote-branch、github、gitignore、history、history-substring-search、iterm2、node、npm、npx、nvm、tig、vscode、yarn、<a href="https://github.com/zsh-users/zsh-autosuggestions" target="_blank" rel="noopener">zsh-autosuggestions</a></li><li>[] iTerm2 里配 <code>Run command...</code> 为 <code>/usr/local/bin/idea --path \2 \1</code> (<a href="https://zos.alipayobjects.com/rmsportal/RmWdxKRQUWFMoVDjerNQ.png" target="_blank" rel="noopener">图</a>)，这样 Command + 点击文件路径，就会在 Intellij Idea 里打开</li><li><a href="http://liyuankun.top/%E5%A5%A5%E5%88%A9%E7%BB%99%E4%BD%A0%E7%9A%84iTerm2-%E5%BF%AB%E9%80%9F%E7%94%A8IDE%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6.html#mac-%E9%85%8D%E7%BD%AEfinder%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95%E6%89%93%E5%BC%80iterm2">Mac 配置在Finder里用iTerm2打开当前目录</a><ul><li>[x] 方法一：安装Go2Shell【MAC OS 版本 &lt;= Big Sur】,  <code>!!!!!亲测版本V2.5, Mac OS Big Sur可以使用，Monterey不能使用</code>【我的百度网盘】</li><li>[x] <a href="http://liyuankun.top/%E5%A5%A5%E5%88%A9%E7%BB%99%E4%BD%A0%E7%9A%84iTerm2-%E5%BF%AB%E9%80%9F%E7%94%A8IDE%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6.html#%E9%99%A4go2shell%E7%9A%84%E5%85%B6%E4%BB%96%E6%96%B9%E6%B3%95-mac-os-%E7%89%88%E6%9C%AC-monterey">方法二：安装OpenInTerminal【MAC OS 版本 &gt;= Monterey】</a><ul><li><a href="https://github.com/Ji4n1ng/OpenInTerminal/blob/master/Resources/README-zh.md" target="_blank" rel="noopener">OpenInTerminal</a>  【推荐】个人目前选择使用这个开源软件了，不仅可以用iTerm2打开，还可以配置用其他IDE例如VScode, sublime打开。</li></ul></li></ul></li><li>[x] 配置<a href="https://www.cnblogs.com/hongrunhui/p/5928833.html" target="_blank" rel="noopener">MAC终端命令行下用sublime、vscode、atom打开文件或目录</a><ul><li>[x] open .  用finder打开当前文件</li><li>[x] vsc .  用vscode打开当前文件</li><li>[x] subl .  用Sublime打开当前文件</li><li>[x] atom .  用Atom打开当前文件</li><li>[x] command + &lt;-  / -&gt;     切换tab</li><li>[x] control + w 回退一部分命令</li></ul></li><li><a href="https://tldr.sh/" target="_blank" rel="noopener">tldr</a> Simplified and community-driven <code>man</code> pages. Quick install: <code>npm install -g tldr</code>.<ul><li>Take <code>git</code> for example, while <code>man</code> <code>git</code> outputs more than 100 lines. <code>&gt; tldr git</code></li></ul></li></ul><h2 id="开发辅助">开发辅助</h2><ul><li><p>[x] <a href="https://kapeli.com/dash" target="_blank" rel="noopener"><strong>Dash</strong></a> 快速查API文档。免费版本会在你搜索完后等10秒再显示，付费版：$29.99 无需等待。</p></li><li><p>[x] <a href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener"><strong>SourceTree</strong></a>，git 辅助，由于 git 高级操作命令记不住，就只用借助 UI 了。</p></li><li><p>[x] <a href="https://paw.cloud/" target="_blank" rel="noopener"><strong>Paw</strong></a>，请求模拟，前后端联调API时用这个先走一遍。</p></li><li><p>[x] <a href="https://www.postman.com/" target="_blank" rel="noopener"><strong>Postman</strong></a>，请求模拟，前后端联调API时用这个先走一遍。</p></li><li><p>[x] <a href><strong>R</strong></a></p></li><li><p>[x] <a href><strong>RStudio</strong></a></p></li><li><p>[x] <a href><strong>Colloquy</strong></a></p></li><li><p>[x] <a href="https://cyberduck.io/" target="_blank" rel="noopener"><strong>Cyberduck</strong></a></p></li><li><p>[x] <a href="https://www.realvnc.com/en/connect/download/viewer/" target="_blank" rel="noopener"><strong>VNC Viewer</strong></a></p></li><li><p>[x] <a href><strong>Microsoft Remote Desktop</strong></a> [APP Store] 美版账号</p></li></ul><!-- - [ ] [**Github Desktop**](https://github.com/desktop/desktop)，管理 github 仓库的变更和 PR，代替了 SourceTree 的部分工作，可以方便地把别人的 PR checkout 到本地验证 --><ul><li>[x] <a href="https://github.com/2ndalpha/gasmask" target="_blank" rel="noopener"><strong>Gas Mask</strong></a> ，<a href="https://zhuanlan.zhihu.com/p/20466912" target="_blank" rel="noopener">Hosts 管理</a></li><li>[x] <a href="https://colorsnapper.com/" target="_blank" rel="noopener"><strong>ColorSnapper2</strong></a>，取色工具。付费，App store 没有。</li></ul><h3 id="抓包">抓包</h3><ul><li>[x] <a href="https://www.charlesproxy.com/" target="_blank" rel="noopener"><strong>Charles</strong></a>，抓包用，支持 https, 不免费，公司提供的付费账号。</li><li>[x] <a href><strong>OWASP ZAP</strong></a></li><li>[x] <a href><strong>Progress Telerik Fiddler</strong></a></li><li>[x] <a href><strong>Wireshark</strong></a></li></ul><h3 id="虚拟机">虚拟机</h3><ul><li>[x] <a href><strong>ParallelsDesktop</strong></a></li><li>[x] <a href><strong>VirtualBox</strong></a></li></ul><h3 id="数据库">数据库</h3><ul><li>[x] <a href="https://www.sequelpro.com/" target="_blank" rel="noopener"><strong>Sequel Pro</strong></a>，Mysql数据库客户端, 开源客户端，目前只有Mac版本。</li><li>[x] <a href><strong>DB Browser for SQLite</strong></a></li><li>[x] <a href><strong>MongoDB Compass</strong></a></li></ul><h3 id="浏览器">浏览器</h3><ul><li>[x] <a href="https://www.google.com/chrome/" target="_blank" rel="noopener"><strong>Google Chrome</strong></a> + <a href="https://www.google.com/chrome/canary/" target="_blank" rel="noopener"><strong>Google Chrome Canary</strong></a> + <a href="https://www.mozilla.org/en-US/firefox/new/" target="_blank" rel="noopener"><strong>Firefox</strong></a> + <strong>Safari</strong>，浏览器，调试用，IE 的测试会借助内网的云测平台</li></ul><h2 id="输出">输出</h2><!-- - [ ] [**Ulysses**](https://ulysses.app/)，笔记工具，从 [Bear](http://www.bear-writer.com/) 和 [Notion](https://www.notion.so/?r=159be429981b4725ad6f36c4f599bd98) 切到 Ulysses --><ul><li>[x] <a href="https://www.onenote.com/signin?wdorigin=ondc" target="_blank" rel="noopener"><strong>Onenote</strong></a>，笔记工具，从 <a href="https://evernote.com/intl/zh-cn" target="_blank" rel="noopener">Evernote印象笔记</a> （原来是会员，现在只是免费版） 切到 Onenote，感觉Onenote对markdown支持不好（只有windows版本有插件可以支持markdown），准备换<a href="https://ulysses.app/" target="_blank" rel="noopener"><strong>Ulysses</strong></a>。不过我现在markdown一般都用vscode+github来写了。</li></ul><!-- - [ ] [**OmniGraffle**](https://www.omnigroup.com/omnigraffle) + [**iThoughtsX**](https://www.toketaware.com/ithoughts-osx) + iPad 上的 [**Whiteboard**](https://apps.apple.com/us/app/microsoft-whiteboard/id1352499399)，分别用于画架构图和和脑图 --><ul><li>[x] <a href="https://www.omnigroup.com/omnigraffle" target="_blank" rel="noopener"><strong>OmniGraffle</strong></a> + <a href="https://www.xmind.net/" target="_blank" rel="noopener"><strong>Xmind</strong></a> + iPad 上的 <a href="https://apps.apple.com/us/app/microsoft-whiteboard/id1352499399" target="_blank" rel="noopener"><strong>Whiteboard</strong></a>，分别用于画架构图和和脑图</li></ul><!-- - [ ] [**LICEcap**](http://www.cockos.com/licecap/) ，GIF 录屏工具 --><ul><li>[x] <a href="https://apps.apple.com/cn/app/gif-brewery-3-video-to-gif/id1081413713?l=en&amp;mt=12" target="_blank" rel="noopener"><strong>Gif Brewery 3</strong></a> ，GIF 录屏工具, 可以直接录屏并转换成gif动图。免费，App store 下载。</li></ul><h2 id="输入">输入</h2><ul><li>[x] <a href="http://reederapp.com/mac/" target="_blank" rel="noopener"><strong>Reeder</strong></a>，RSS 阅读软件</li></ul><!-- 我的主要信息来源，没有提供 rss 源的我会先在 [**rsshub.app**](https://docs.rsshub.app/) 上找，再没有就自己写一个 serverless 服务部署在 [now](https://zeit.co/) 上，[now使用方法](http://object.ws/2017/09/10/nowsh-note/) --><ul><li>[x] <a href="http://kiwiforgmail.com/" target="_blank" rel="noopener"><strong>Kiwi for Gmail</strong></a>，Gmail 客户端, 我用的免费的lite版，App store 要切换到美国。</li></ul><h2 id="效率">效率</h2><ul><li>[x] <a href="https://www.alfredapp.com/" target="_blank" rel="noopener"><strong>Alfred</strong></a> + <a href="https://www.alfredapp.com/powerpack/" target="_blank" rel="noopener"><strong>Powerpack</strong></a>，应用启动、粘贴板管理、Workflow、Snippets 管理等。 同步问题可以参考：<a href="https://www.zhihu.com/question/39098799" target="_blank" rel="noopener">Alfred 中如何在不同电脑上同步自定义设置？</a> 和 <a href="https://mac.orsoon.com/news/337637.html" target="_blank" rel="noopener">在Mac之间同步您的Alfred设置</a>。免费功能：File search, Web search，app启动, Calculator, Dictionary, System。付费功能（需购买Powerpack）：Workflow，Action, Clipboard History，Snippets, Contacts, itunes, 1Password, Terminal.</li></ul><!-- - [ ] [**Paste**](https://pasteapp.me/)，粘贴板管理，[**Copied**](https://copiedapp.com/) 在 mac 10.15 下有 bug 就放弃了，再之前一直用 Alfred 的粘贴板 --><!-- - [ ] [**TaskPaper**](https://www.taskpaper.com/)，任务管理 --><!-- - [ ] [**OmniFocus**](https://www.omnigroup.com/omnifocus) ，任务管理，通过 Omni Sync Server 和 iPhone 同步 --><ul><li>[x] <a href="https://dida365.com/" target="_blank" rel="noopener"><strong>TickTick滴答</strong></a> ，任务管理，有MAC版和iPhone版，可以同步。</li><li>[x] <a href="https://github.com/gbammc/Thor" target="_blank" rel="noopener"><strong>Thor</strong></a>，一键直达应用， 免费，开源。</li><li>[x] <a href="https://pqrs.org/osx/karabiner/" target="_blank" rel="noopener"><strong>Karabiner Element</strong></a>，用于<a href="http://lucifr.com/2013/02/16/caps-lock-to-hyper-key/" target="_blank" rel="noopener">把右 Command 和 Capslock 键利用起来</a>，避免快捷键冲突，<a href="https://hackmd.io/s/rk4u9i-pG" target="_blank" rel="noopener">简单 note</a>，详见<a href="https://www.bilibili.com/video/av44127555" target="_blank" rel="noopener">sorrycc的《我的快捷键技巧》</a>.<ul><li>[ ] <a href="./Karabiner-Elements%E4%B8%8D%E7%94%9F%E6%95%88.html">Karabiner-Elements不生效解决方法</a></li></ul></li></ul><h2 id="摄影相关">摄影相关</h2><h3 id="图片">图片</h3><!-- - [ ] [**ScreenFlow**](http://www.telestream.net/screenflow/overview.htm)，视频录制和剪辑 --><!-- - [ ] [**Final Cut Pro**](https://www.apple.com/final-cut-pro/)，视频剪辑 --><ul><li>[x] <a href="https://imageoptim.com/mac" target="_blank" rel="noopener"><strong>imageoptim</strong></a>免费且开源的 Mac 图片无损压缩优化工具。默认设置下，它的压缩号称是「无损」的，也就是说画质不会被改变，但体积却可以被减小。ImageOptim 支持 PNG、JPG、GIF 格式的图片压缩优化，你只需将文件拖放到它的界面上即可完成优化 (PS：处理后会覆盖原图 / 原图被移到垃圾桶，可手工恢复)，支持批量，使用上非常简单方便。</li><li>[x] <a href="https://www.pcpc.me/tech/mac-image-capture" target="_blank" rel="noopener"><strong>Image Capture</strong></a>macOS预先安装，自带app。可以使用iTunes或照片将iOS设备，相机或SD卡中的照片导入Mac。但是，如果您在使用这些应用程序时遇到麻烦，或者您希望使用界面更简单的应用程序，请尝试使用Image Capture。</li><li>[x] <a href="https://skylum.com/luminar" target="_blank" rel="noopener"><strong>Luminar 2018</strong></a> 修图工具。限时免费的时候下载的。</li></ul><h3 id="视频">视频</h3><ul><li><p>[x] <a href="https://github.com/avibrazil/RDM" target="_blank" rel="noopener"><strong>RDM</strong></a>，分辨率切换，允许设置未支持的分辨率，比如我会在录屏时设置 720p(hd) 的分辨率。在使用多个外接显示屏的时候，也可以调整外接显示屏的分辨率，很方便。免费，开源。</p></li><li><p>[x] <a href="https://github.com/keycastr/keycastr" target="_blank" rel="noopener"><strong>KeyCastr</strong></a>，你在键盘上按了哪些键，会显示在屏幕上，适合录屏的时候使用。通过 homebrew cask 安装: <code>brew cask install keycastr</code>。记得mac设置Security &amp; Privacy下的Input monitoring 和 Accessibility里面要加上并勾选。顺便把开始显示键盘的快捷键设置成了F19 + k。免费，开源。</p></li><li><p>[x] <a href="https://www.blackmagicdesign.com/products/davinciresolve/" target="_blank" rel="noopener"><strong>DaVinci Resolve 16</strong></a> 达芬奇，视频剪辑，有免费版本，影视飓风在B站有免费教程。</p></li><li><p>[x] <a href="https://apps.apple.com/cn/app/blackmagic-raw-player/id1435415804?mt=12" target="_blank" rel="noopener"><strong>Blackmagic RAW Player</strong></a> Blackmagic RAW Player是观看Blackmagic RAW格式片段的理想选择。Blackmagic RAW Player能够播放Blackmagic RAW格式的媒体文件，以及扩展名为.braw的媒体文件。App store 有，免费。</p></li><li><p>[x] <a href="https://apps.apple.com/cn/app/blackmagic-raw-speed-test/id1466185689?mt=12" target="_blank" rel="noopener"><strong>Blackmagic RAW Speed Test</strong></a> Blackmagic RAW Speed Test是一套CPU和GPU衡量工具，可用于测试系统上解码全分辨率Blackmagic RAW帧的速度。测试中多个CPU内核和GPU会被自动检测和使用，为您提供准确实际的结果。只需选择Blackmagic RAW固定比特率3:1、5:1、8:1或12:1，以及您想要的分辨率即可执行测试。测试结果以简单明了的表格形式展示，显示了您的计算机每秒解码所有支持分辨率的帧数。App store 有，免费。</p></li><li><p>[x] <a href="https://www.blackmagicdesign.com/products/davinciresolve/" target="_blank" rel="noopener"><strong>PluralEyes 4</strong></a> Red Giant PluralEyes for mac是Mac平台上一款专业的音视频同步剪辑软件，pluraleyes 4 mac支持使用轨道和媒体剪辑、跨区剪辑、临时同步文件、调整同步结果、微调同步、导出为媒体文件、导出时间轴等功能，能够轻松处理多机位的音视频同步问题。付费。</p></li><li><p>[ ] <a href="https://softorino.com/youtube-converter" target="_blank" rel="noopener"><strong>Softorino YouTube Converter</strong></a>，免费24小时，之后付费，YouTube 视频下载</p></li><li><p>[ ] <a href="https://github.com/ytdl-org/youtube-dl/blob/master/README.md#readme" target="_blank" rel="noopener"><strong>youtube-dl</strong></a> <a href="https://zhuanlan.zhihu.com/p/27718783" target="_blank" rel="noopener">命令行视频下载利器，选择下载视频，或是将视频流直接导出到自己想使用的播放器中</a>。国内类似版本： <a href="https://github.com/soimort/you-get" target="_blank" rel="noopener">You-Get</a>，对国内平台支持的更好。</p></li></ul><!-- - [ ] [**Downie 3**](http://software.charliemonroe.net/downie.php)，通用视频下载，付费，SetApp含有 --><ul><li>[ ] <a href="https://mac.eltima.com/download-manager.html" target="_blank" rel="noopener"><strong>Folx 5</strong></a> + <a href="https://www.qbittorrent.org/" target="_blank" rel="noopener"><strong>qBittorrent</strong></a> + <a href="https://motrix.app/" target="_blank" rel="noopener"><strong>Motrix</strong></a>，下载工具，Folx 下 http，qBittorrent 下 magnet，Motrix 是 aria2 的封装，可以<a href="https://www.yuque.com/moapp/help/extensions" target="_blank" rel="noopener">下百度云盘、115 等</a></li><li>[ ] <a href="https://justgetflux.com" target="_blank" rel="noopener"><strong>f.lux</strong></a>，调节显示器色温，护眼，尤其是早上起来屏幕实在是刺眼</li><li>[x] <a href="https://github.com/iina/iina" target="_blank" rel="noopener"><strong>IINA</strong></a>，<a href="https://iina.io/" target="_blank" rel="noopener">IINA</a>视频播放。原来用的<a href="https://www.videolan.org/vlc/index.zh.html" target="_blank" rel="noopener">VLC media player</a>，后来<a href="https://www.zhihu.com/question/19552878/answer/139035466" target="_blank" rel="noopener">改用IINA</a>。开源，免费。</li></ul><h3 id="作图">作图</h3><ul><li>[x] <a href><strong>SketchUp 2018</strong></a></li></ul><h2 id="其他">其他</h2><ul><li><p>[x] <a href="https://macpaw.com/cleanmymac" target="_blank" rel="noopener">**CleanMyMac **</a>，系统清理， 付费。</p></li><li><p>[x] <a href="https://www.omnigroup.com/more" target="_blank" rel="noopener">**OmniDiskSweeper **</a> 系统文件清理。开源免费软件。</p></li><li><p>[ ] <a href="https://1password.com/" target="_blank" rel="noopener"><strong>1Password</strong></a>，密码管理</p></li><li><p>[x] <a href="https://www.lastpass.com/" target="_blank" rel="noopener"><strong>Last Password</strong></a>，密码管理 浏览器插件免费，手机app需要Premium会员（我iphone上用苹果的密码记录,就没使用Last Password）, 1Password也不错，这两个都可以。</p></li></ul><!-- - [ ] [**Bartender 3**](https://www.macbartender.com/)，管理系统右上菜单项，隐藏或收起不常用的，付费。 --><ul><li><p>[x] <a href="https://github.com/newmarcel/KeepingYouAwake" target="_blank" rel="noopener"><strong>KeepingYouAwake</strong></a>，可保证Mac系统不自动休眠。原来用的<a href="http://lightheadsw.com/caffeine/" target="_blank" rel="noopener">Caffeine</a>，但是<a href="https://www.reddit.com/r/osx/comments/9pbl9u/macos_mojave_caffeine_replacement/" target="_blank" rel="noopener">MacOS更新到Mojave以后就不管用了</a>。可以改用Amphetamine 或者 KeepingYouAwake。免费，开源。</p></li><li><p>[x] <a href="https://itunes.apple.com/cn/app/perculia/id1462633284?mt=12" target="_blank" rel="noopener"><strong>Perculia</strong></a> - 蓝牙设备管理，可以一键连耳机。App store 有，免费。</p></li><li><p>[ ] <a href="https://jietu.qq.com/" target="_blank" rel="noopener"><strong>截图</strong></a>，顾名思义，腾讯出的截图工具，App store 有，免费。</p></li><li><p>[x] <a href="https://itunes.apple.com/nz/app/runcat/id1429033973?mt=12&amp;ref=appinn" target="_blank" rel="noopener"><strong>RunCat</strong></a> - 菜单栏显示奔跑的小猫，CPU 占用率越高跑地越快。App store 有，免费。</p></li><li><p>[x] <a href="https://slack.com/downloads/mac" target="_blank" rel="noopener"><strong>Slack</strong></a> + <a href="https://im.qq.com/macqq/" target="_blank" rel="noopener"><strong>QQ</strong></a> + <a href="https://mac.weixin.qq.com/" target="_blank" rel="noopener"><strong>微信</strong></a> + <a href="https://tms.dingtalk.com/markets/dingtalk/download" target="_blank" rel="noopener"><strong>钉钉</strong></a>，通讯交流。App store 有，免费。</p></li><li><p>[ ] <a href="https://www.tuxera.com/products/tuxera-ntfs-for-mac/" target="_blank" rel="noopener"><strong>Tuxera NTFS</strong></a> - 支持 NTFS 格式硬盘，付费。</p></li><li><p>[x] <a href="https://www.seagate.com/pl/pl/support/software/paragon/" target="_blank" rel="noopener"><strong>Microsoft NTFS for Mac by Paragon Software</strong></a> - 支持 NTFS 格式硬盘，因为原来买了希捷的移动硬盘，送的软件，一般、够用。</p></li><li><p>[x] <a href="https://apps.apple.com/dk/app/drivedx/id526290112?mt=12" target="_blank" rel="noopener">DriveDx</a> – 磁盘健康检测和监控工具，付费。</p></li></ul><h2 id="命令行">命令行</h2><h3 id="通过-homebrew-安装">通过 <a href="https://brew.sh/" target="_blank" rel="noopener">homebrew</a> 安装</h3><ul><li>[x] <a href="https://github.com/wting/autojump" target="_blank" rel="noopener"><strong>autojump</strong></a>，目录跳转</li><li>[ ] <a href="https://github.com/ggreer/the_silver_searcher" target="_blank" rel="noopener"><strong>the_silver_searcher</strong></a>，文件搜索，命令行是 ag</li><li>[ ] <a href="https://hub.github.com/" target="_blank" rel="noopener"><strong>hub</strong></a> - git 扩展</li><li>[ ] <a href="https://github.com/jonas/tig" target="_blank" rel="noopener"><strong>tig</strong></a> - git 扩展</li><li>[ ] <a href="https://github.com/sharkdp/bat" target="_blank" rel="noopener"><strong>bat</strong></a>，带行号的 cat，可以配 <code>alias cat=&quot;bat&quot;</code></li><li>[ ] <a href="https://github.com/sharkdp/fd" target="_blank" rel="noopener"><strong>fd</strong></a>，比系统自带的 find 友好</li></ul><h3 id="通过-yarn-global-add-安装">通过 <code>yarn global add</code> 安装</h3><ul><li>[ ] <a href="https://github.com/popomore/projj" target="_blank" rel="noopener"><strong>projj</strong></a>，github/gitlab 项目管理</li><li>[ ] <a href="https://github.com/zeit/serve" target="_blank" rel="noopener"><strong>serve</strong></a>，本地静态服务器</li><li>[ ] <a href="https://github.com/sindresorhus/fkill" target="_blank" rel="noopener"><strong>fkill</strong></a>，比 kill 好用的进程 killer</li><li>[ ] <a href="https://github.com/gtanner/qrcode-terminal" target="_blank" rel="noopener"><strong>qrcode-terminal</strong></a>，二维码生成</li></ul><h2 id="chrome-插件">Chrome 插件</h2><h3 id="github-相关">Github 相关</h3><ul><li>[ ] <a href="https://github.com/OctoLinker/browser-extension" target="_blank" rel="noopener"><strong>OctoLinker</strong></a>，根据 require/import 或 package.json 中的 dependencies 进行快速跳转</li><li>[x] <a href="https://github.com/sindresorhus/refined-github" target="_blank" rel="noopener"><strong>Refined Github</strong></a>，Github 改进</li><li>[ ] <a href="https://github.com/npmhub/npmhub" target="_blank" rel="noopener"><strong>npmhub</strong></a>，在 README 下方显示 npm 依赖信息</li><li>[ ] <a href="https://github.com/sindresorhus/hide-files-on-github" target="_blank" rel="noopener"><strong>Hide Files on GitHub</strong></a>，隐藏配置文件等非必要文件</li><li>[ ] <a href="https://github.com/Justineo/github-hovercard" target="_blank" rel="noopener"><strong>Github Hovercard</strong></a>，比如不用点进去就能看到 issue 详情</li><li>[x] <a href="https://chrome.google.com/webstore/detail/git-history-browser-exten/laghnmifffncfonaoffcndocllegejnf" target="_blank" rel="noopener"><strong>Git History Browser Extension</strong></a>，可视化的方式显示文件修改历史</li><li>[x] <a href="https://chrome.google.com/webstore/detail/file-icon-for-github-gitl/ficfmibkjjnpogdcfhfokmihanoldbfe" target="_blank" rel="noopener"><strong>File Icon for GitHub, GitLab and Bitbucket</strong></a>，更好看的文件 icon</li><li>[x] <a href="https://github.com/ovity/octotree" target="_blank" rel="noopener"><strong>octotree</strong></a>，显示文件树形目录</li></ul><h3 id="其他-v2">其他</h3><ul><li>[x] <a href="https://workona.com/" target="_blank" rel="noopener"><strong>Workona</strong></a>，tab 管理，基于使用场景，<a href="https://chrome.google.com/webstore/detail/workona/ailcmbgekjpnablpdkmaaccecekgdhlh?hl=en-GB" target="_blank" rel="noopener">Chrome插件地址</a>。非常推荐，让我可以抛弃原来的oneTab插件了，非常适合我这种什么网页都舍不得关的人。</li><li>[x] <a href="https://app.grammarly.com/" target="_blank" rel="noopener"><strong>Grammer</strong></a>，语法提醒插件，拼写错误和语法错误都可以提醒，主要辅助我工作上的英文交流。它现在不仅有浏览器插件、office插件，Mac上也有app了.</li><li>[x] <a href="https://github.com/callumlocke/json-formatter" target="_blank" rel="noopener"><strong>JSON Formatter</strong></a>，让 JSON 更易读</li><li>[ ] <a href="https://chrome.google.com/webstore/detail/chrome-better-history/aadbaagbanfijdnflkhepgjmhlpppbad?hl=en" target="_blank" rel="noopener"><strong>Better History</strong></a>，搜索历史记录用</li><li>[ ] <a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo" target="_blank" rel="noopener"><strong>Tampermonkey</strong></a>，油猴，通过脚本定制网页</li><li>[ ] <a href="https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm" target="_blank" rel="noopener"><strong>uBlock Origin</strong></a>，广告 Block</li><li>[ ] <a href="https://chrome.google.com/webstore/detail/imdb-ratings-for-netflix/dnbpnlalaijjbogmjbpdkdcohoibjcmp/related?hl=en" target="_blank" rel="noopener"><strong>Netflix Rating</strong></a>，在 netflix 上显示每个影片的 IMDB 的评分信息</li><li>[ ] <a href="https://chrome.google.com/webstore/detail/select-like-a-boss/mnbiiidkialopoakajjpeghipbpljffi/related?hl=en" target="_blank" rel="noopener"><strong>Select like a boss</strong></a>，可以选择链接里的内容</li><li>[ ] <a href="https://chrome.google.com/webstore/detail/lingocloud-interpreter/jmpepeebcbihafjjadogphmbgiffiajh/related" target="_blank" rel="noopener"><strong>Lingocloud Interpreter</strong></a>，全文翻译</li><li>[ ] <a href="https://chrome.google.com/webstore/detail/video-speed-controller/nffaoalbilbmmfgbnbgppjihopabppdk/related?hl=en" target="_blank" rel="noopener"><strong>Video Speed Controller</strong></a>，在视频上显示按钮可控制播放速度</li></ul><h1 id="mac-设置">Mac 设置</h1><ul><li>[x] <a href="https://www.zhihu.com/question/49530172" target="_blank" rel="noopener">固定MAC窗口顺序</a></li></ul><h1 id="iphone-软件">iPhone 软件</h1><h2 id="每天用">每天用</h2><ul><li>[x] <strong>支付宝</strong></li><li>[x] <strong>微信</strong></li><li>[x] <strong>Chrome</strong>，代替 Safari，好处是可以和电脑同步</li><li>[x] <strong>Gmail</strong></li><li>[ ] <strong>Reeder</strong>，我是 RSS 重度用户</li><li>[x] <strong>钉钉</strong>，工作交流</li><li>[ ] <strong>Shadowrocket</strong>，你懂的，需切换美区安装</li><li>[x] <strong>Twitter</strong>，感觉官方客户端够用了</li><li>[ ] <strong>Workflow</strong>，最常用的一个 workflow 是 clipboard to instapaper，用于把微信文章经由 instapaper 保存到 github issue</li><li>[x] <strong>网易云音乐</strong></li><li>[ ] <strong>OmniFocus</strong>，任务管理</li></ul><p>更多 <a href="https://github.com/sorrycc/ama/issues/12" target="_blank" rel="noopener">https://github.com/sorrycc/ama/issues/12</a></p><h1 id="在线服务">在线服务</h1><h3 id="免费">免费</h3><ul><li>[x] <a href="http://refiddle.com/" target="_blank" rel="noopener"><strong>refiddle</strong></a> + <a href="https://regex101.com/" target="_blank" rel="noopener"><strong>regex101</strong></a>，调正则表达式</li><li>[x] <a href="https://30secondsofcode.org/" target="_blank" rel="noopener"><strong>30 seconds of code</strong></a>，代码片段</li><li>[x] <a href="https://astexplorer.net/" target="_blank" rel="noopener"><strong>astexplorer</strong></a>，调 ast</li></ul><!-- - [ ] [**globtester**](http://www.globtester.com/)，调 glob --><ul><li>[x] <a href="http://ghub.io/" target="_blank" rel="noopener"><strong>ghub.io</strong></a>，redirect to an npm package’s repository page</li><li>[x] <a href="https://unpkg.com/" target="_blank" rel="noopener"><strong>unpkg</strong></a>，npm 包的 cdn 服务，可以查看 npm 包发布后的内容</li><li>[x] <a href="https://sketchboard.me/" target="_blank" rel="noopener"><strong>sketchboard</strong></a> + <a href="https://www.draw.io/" target="_blank" rel="noopener"><strong>draw.io</strong></a> + <a href="https://www.mindmeister.com/" target="_blank" rel="noopener"><strong>MindMeister</strong></a> + <a href="https://whimsical.com/" target="_blank" rel="noopener"><strong>Whimsical</strong></a>，在线画流程图</li><li>[x] <a href="https://hackmd.io/recent" target="_blank" rel="noopener"><strong>HackMD</strong></a>，在线笔记，有 PPT 展示功能</li><li>[x] <a href="https://slides.com/" target="_blank" rel="noopener"><strong>Slides</strong></a>，PPT 制作，带动画</li><li>[x] <a href="https://codesandbox.io/" target="_blank" rel="noopener"><strong>CodeSandbox</strong></a> + <a href="https://glitch.com/" target="_blank" rel="noopener"><strong>glitch</strong></a> + <a href="https://repl.it/" target="_blank" rel="noopener"><strong>repl.it</strong></a>+<a href="https://codepen.io/" target="_blank" rel="noopener">codepen</a>，在线代码编辑，前者支持 sandbox container，可以跑 npm scripts</li><li>[x] <a href="https://node.green/" target="_blank" rel="noopener"><strong>node.green</strong></a>，查询 NodeJS 的 ES2018 特性支持情况</li><li>[x] <a href="https://caniuse.com/" target="_blank" rel="noopener"><strong>Can I use</strong></a>，查询浏览器的特性支持情况</li><li>[x] <a href="https://carbon.now.sh/" target="_blank" rel="noopener"><strong>carbon</strong></a>，根据源码生成图片</li><li>[x] <a href="https://tellmewhenitcloses.com" target="_blank" rel="noopener"><strong>Tell me when it closes</strong></a>，github issue 关闭时发送邮件通知</li><li>[x] <a href="https://diff.intrinsic.com/" target="_blank" rel="noopener"><strong>Package Diff</strong></a>，比较 npm 包两个版本直接的区别</li><li>[x] <a href="https://send.firefox.com/" target="_blank" rel="noopener"><strong>Firefox Send</strong></a> + <a href="https://github.com/timvisee/ffsend" target="_blank" rel="noopener"><strong>ffsend</strong></a>，文件分享服务</li><li>[x] <a href="https://cloudconvert.com/" target="_blank" rel="noopener"><strong>Cloud Convert</strong></a>，支持 218 种格式相互转换</li><li>[x] <a href="https://www.smooth-code.com/open-source/svgr/playground/" target="_blank" rel="noopener"><strong>SVGR</strong></a>，SVG 转 React 组件</li><li>[x] （beta）<a href="https://webpack.jakoblind.no/" target="_blank" rel="noopener"><strong>Webpack config tool</strong></a>，webpack 配置工具</li></ul><h3 id="付费">付费</h3><ul><li>[x] <a href="https://www.safaribooksonline.com/" target="_blank" rel="noopener"><strong>Oreilly Safari Books</strong></a>，Oreilly 图书、视频教程、newsletter 等。付费，公司报销，很划算，等于我没掏钱。</li></ul><!-- - [ ] [**Frontend Masters**](https://frontendmasters.com/)，视频教程 --><!-- - [ ] [**Zeit Now**](https://zeit.co/now)，serverless 服务，域名等 --><!-- - [ ] [**name.com**](https://www.name.com/)，域名服务，之后会转到 Zeit Now 上 --><!-- - [ ] [**少数派 Power+ 2.0**](https://sspai.com/series/70)，提效相关文章 --><ul><li>[x] <a href="https://music.163.com/" target="_blank" rel="noopener"><strong>网易云音乐</strong></a></li></ul><!-- - [ ] **百度云盘** + **115 网盘** + [**麦果网盘中转**](https://www.maiguopan.com/)，资料下载 --><ul><li>[x] <strong>爱奇艺</strong>（苏宁会员） + <strong>腾讯视频</strong> + <strong>优酷</strong>（88会员） + <strong>bilibili</strong>，会员去广告</li></ul><!-- - [ ] [**Netflix**](https://www.netflix.com)，蹭 [pigcan](http://github.com/pigcan) 的账号 --><!-- - [ ] [**Youtube Premium**](https://www.youtube.com/)，主要为了 iPhone 上切换应用或锁屏后能继续播放 --><!-- - [ ] [**SetApp**](https://go.setapp.com/invite/sorrycc)，喊几个好友一起买，可以省不少钱 --><h1 id="硬件">硬件</h1><h2 id="电脑">电脑</h2><ul><li>[ ] <strong>MacBook Pro 15-inch, 2017</strong>，公司配的，512 G 不太够用，但还行吧。自己的电脑<strong>MacBook Pro 15-inch, 2013</strong>准备用<a href="https://detail.tmall.com/item.htm?id=569327401210&amp;spm=a1z09.2.0.0.76a52e8dZEojbU&amp;_u=l1h6urtf206" target="_blank" rel="noopener">三星 970</a> 升了 1T 硬盘</li></ul><h2 id="电脑配件">电脑配件</h2><!-- - [ ] [**U28E590D**](https://detail.tmall.com/item.htm?id=523282229383) x2，三星显示器，应该是 4K 中最便宜的了 --><ul><li>[ ] <a href="https://detail.tmall.com/item.htm?id=594024489687&amp;spm=a1z09.2.0.0.260f2e8drJ2dpC&amp;_u=cgkogtg55d4&amp;sku_properties=5919063:6536025" target="_blank" rel="noopener"><strong>AOC 32英寸4K曲面显示器</strong></a> 公司用的dell，家里用的AOC 32英寸4K曲面显示器。</li></ul><!-- - [ ] (**HHKB Pro 2 无刻** + [彩色键帽](https://item.taobao.com/item.htm?id=522721338431&_u=41h6urte838)) x2 --><ul><li>[ ] <a href="https://www.apple.com.cn/shop/product/MRMH2CH/A?fnode=7b42677784b656a8070a65a4b45fb9bb0e53cf839f4843024382ab3c691eb0cad59601137a779152887a1ae9e81734d538be3e41128798b0946b68981dd0cc35f7adcc869bf70d088fdf71fc297938893a63c6baa2e12bbb3f288516a56954e5" target="_blank" rel="noopener"><strong>带有数字小键盘的妙控键盘 - 银色</strong></a></li></ul><!-- - [ ] [**Razer DeathAdder Chroma**](http://www.razerzone.com/store/razer-deathadder-chroma) x2 --><ul><li>[ ] <a href><strong>罗技无线鼠标</strong></a></li></ul><h2 id="家庭网络">家庭网络</h2><!-- - [ ] J1900 软路由 + UBNT 交换机 + （UBNT AP & [**华硕 RT-AC88U**](https://item.jd.com/2104499.html)） --><h2 id="手机">手机</h2><ul><li>[x] <a href="https://www.apple.com/iphone-x/" target="_blank" rel="noopener"><strong>iPhoneXS MAX</strong></a></li></ul><h2 id="耳机">耳机</h2><ul><li>[x] <a href="https://detail.tmall.com/item.htm?id=577955986589&amp;spm=a1z09.2.0.0.260f2e8drJ2dpC&amp;sku_properties=5919063:6536025" target="_blank" rel="noopener"><strong>Sony/索尼 WH-1000XM3</strong></a>，头戴式无线降噪蓝牙耳机1000X，天猫618买的。淘口令：(￥kusV1GSXOve￥)</li></ul><h2 id="相机">相机</h2><ul><li>[x] <a href="https://www.fujifilmusa.com/products/digital_cameras/x/fujifilm_x100t/" target="_blank" rel="noopener"><strong>Sony A6000</strong></a> 准备换A7</li><li>[x] <a href="https://zh.shop.gopro.com/China/cameras/hero7-black/CHDHX-701-master.html" target="_blank" rel="noopener"><strong>大疆手机稳定器</strong></a></li></ul><h1 id="参考链接">参考链接</h1><p><a href="https://github.com/sorrycc/awesome-tools" target="_blank" rel="noopener">awesome-tools</a></p><!-- - [ ] [awesome-f2e-libs](https://github.com/sorrycc/awesome-f2e-libs) -我关注的前端库。- [ ] [旧版本的装了啥](https://github.com/sorrycc/blog/issues/16) --><h2 id="rss-阅读器">RSS 阅读器</h2><p>Reeder 好，MACOS+IOS 但是要付费<br>NetNewsWire 免费，只有IOS</p><table><thead><tr><th>名称</th><th>内容简介</th><th>缺点</th><th>适用平台</th><th>评分</th></tr></thead><tbody><tr><td><a href="https://www.inoreader.com/?lang=zh_CN" target="_blank" rel="noopener">InoReader</a></td><td>用户体验非常好，界面简洁而且漂亮，不限制订阅源。</td><td>速度慢，有广告。</td><td>Web/IOS/Android</td><td>9.1</td></tr><tr><td><a href="https://feedly.com/" target="_blank" rel="noopener">Feedly</a></td><td>老牌阅读器，创建于2008年，有网页版和手机APP。</td><td><code>部分功能收费</code>，速度慢。</td><td>Web/IOS/Android</td><td>9.0</td></tr><tr><td><a href="https://tt-rss.org/" target="_blank" rel="noopener">TinyTinyRSS</a></td><td><code>开源免费</code>的RSS阅读器，功能上可以满足大部分人的需要。</td><td>需要自己购买空间搭建。</td><td>PC/手机</td><td>9.0</td></tr><tr><td><a href="http://reederapp.com/" target="_blank" rel="noopener">Reeder</a></td><td>IOS和Mac最佳RSS阅读器。</td><td>没有网页版，产品为<code>付费</code>。</td><td>IOS/Mac</td><td>8.9</td></tr><tr><td><a href="https://ranchero.com/netnewswire/" target="_blank" rel="noopener">NetNewsWire</a></td><td><code>免费</code>！！</td><td>没有网页版。</td><td>IOS/Mac</td><td>8.9</td></tr><tr><td><a href="https://miniflux.net/" target="_blank" rel="noopener">Miniflux</a></td><td>一款简洁<code>开源</code>RSS阅读器程序，功能简单但是实用。</td><td>需要自己购买空间搭建程序。</td><td>PC</td><td>8.8</td></tr><tr><td><a href="http://www.rssowl.org/" target="_blank" rel="noopener">RSSOwl</a></td><td>用 Java 编写，跨平台的桌面 Feed 阅读器。有强大的过滤和搜索功能、可定制的通知。</td><td>没有Web, 没有手机端。</td><td>Mac/Win/Linux</td><td>8.6</td></tr><tr><td><a href="http://digg.com/reader" target="_blank" rel="noopener">Digg Reader</a></td><td>老牌的<code>免费</code>在线RSS阅读器，出自Digg旗下，很稳定。</td><td>速度慢，好久没有更新。</td><td>PC/手机</td><td>8.5</td></tr><tr><td><a href="https://feeder.co/" target="_blank" rel="noopener">Feeder</a></td><td>一个用户体验不错的RSS阅读器。</td><td>有广告，速度慢。</td><td>PC/手机</td><td>8.5</td></tr><tr><td><a href="https://wzfou.com/nextcloud/" target="_blank" rel="noopener">Nextcloud News</a></td><td>Nextcloud自带的RSS阅读插件，可以打造成一个RSS阅读器。</td><td>需要自己搭建环境。</td><td>PC/手机</td><td>8.3</td></tr><tr><td><a href="http://reader.aol.com/" target="_blank" rel="noopener">AOL Reader</a></td><td>互联网媒体巨头AOL旗下的RSS阅读器。</td><td>速度慢。</td><td>PC/手机</td><td>8.3</td></tr><tr><td><a href="http://www.feedspot.com/" target="_blank" rel="noopener">Feedspot</a></td><td>国外一个RSS阅读器，提供中文界面。</td><td>PC/手机</td><td>8.0</td><td></td></tr><tr><td>QQ阅读空间</td><td>QQ邮箱自带的一款在线RSS阅读器。</td><td>长期不更新，不支持Https订阅源。</td><td>PC</td><td>8.0</td></tr><tr><td><a href="http://azreader.net/" target="_blank" rel="noopener">AZ Reader</a></td><td>国内自建的RSS阅读器</td><td>PC</td><td>7.9</td><td></td></tr><tr><td><a href="http://www.feeddemon.com/" target="_blank" rel="noopener">FeedDemon</a></td><td>老牌的RSS阅读器软件，从2013年不再更新，但是不影响使用。</td><td>仅PC软件，无Web和APP。</td><td>PC</td><td>7.9</td></tr><tr><td><a href="https://www.open-tickr.net/" target="_blank" rel="noopener">Tickr</a></td><td>桌面客户端，会将你的 Feed 标题如滚动新闻那样在桌面横栏上滚动显示。</td><td>仅软件，没有Web和APP</td><td>PC</td><td>7.7</td></tr><tr><td><a href="https://theoldreader.com/" target="_blank" rel="noopener">The Old Reader</a></td><td>国外一家阅读器，有中文，可自定义站点分享。</td><td>免费版最多100个订阅源</td><td>PC/手机</td><td>7.6</td></tr><tr><td><a href="http://bluereader.org/" target="_blank" rel="noopener">Bluereader</a></td><td>国产的RSS阅读器，速度快，有网页版和手机APP。</td><td>不稳定，很少更新。</td><td>PC/手机</td><td>7.5</td></tr><tr><td><a href="http://www.yilan.io/" target="_blank" rel="noopener">一览</a></td><td>国产RSS阅读器，速度快。</td><td>免费用户最多只能是100个订阅源。</td><td>PC/手机</td><td>7.5</td></tr><tr><td>irreader</td><td>国产RSS阅读器，速度快。除了基本的 OPML 导入外，它还提供了订阅源市场，收录了 600 余款精选 RSS 源，涵盖大部分常用网站。此外，irreader 还自带多种主题切换、 AdBlock 插件等。对于不支持 RSS 的网站，你还可以自定义抓取规则，手动获取更新。支持菜单栏速览功能。不用打开主界面，只需轻点菜单栏图标就能查看订阅内容标题，选择自己感兴趣的进行深入阅读。此外，irreader 的通知系统也十分完善，会聚合近期更新，方便了解更多动态。</td><td>免费用户最多只能是100个订阅源。</td><td>macOS/Win</td><td>未知</td></tr><tr><td><a href="https://newsblur.com/" target="_blank" rel="noopener">NewsBlur</a></td><td>NewsBlur 免费账户支持 Training，Text 视图以及 IFTTT。</td><td>免费用户最多64个源</td><td>PC/手机</td><td>7.3</td></tr><tr><td><a href="https://g2reader.com/en/" target="_blank" rel="noopener">G2Reader</a></td><td>国外一个Rss阅读器。</td><td>访问速度慢。</td><td>PC/手机</td><td>7.2</td></tr></tbody></table><p><a href="https://zhuanlan.zhihu.com/p/45120897" target="_blank" rel="noopener">四款好用的 RSS 阅读器推荐[全平台支持]</a><br><a href="https://sspai.com/post/55050" target="_blank" rel="noopener">Mac 上的 RSS 阅读工具，你有这些好看实用的选择</a><br><a href="https://www.v1tx.com/post/best-rss-reader/" target="_blank" rel="noopener">2020 RSS 阅读推荐</a></p><h2 id="请问-mac-上有哪些硬盘检测工具？如-win-上-crystaldiskinfo-hd-tune-之类">请问 Mac 上有哪些硬盘检测工具？<a href="https://www.v2ex.com/t/175051" target="_blank" rel="noopener">如 Win 上 CrystalDiskInfo、HD Tune 之类</a></h2><p>DriveDx<br>可以用brew安装smartmontools查看SMART数据<br><a href="https://kknews.cc/digital/562gly8.html" target="_blank" rel="noopener">MacOS硬盘检测工具</a> <a href="https://www.itpwd.com/215.html" target="_blank" rel="noopener">SMART Utility 3.2.6</a><br>HD Tune Pro for Mac</p><h3 id="mac-移动硬盘未挂载-解决办法">Mac 移动硬盘未挂载-解决办法</h3><p><a href="https://www.jianshu.com/p/56d37a0002d7" target="_blank" rel="noopener">Mac 移动硬盘未挂载-解决办法</a><br><a href="https://www.cnblogs.com/kaffeetrinken/p/10596740.html" target="_blank" rel="noopener">Mac的移动硬盘不能装载该如何解决?</a><br><a href="https://zhuanlan.zhihu.com/p/83542978" target="_blank" rel="noopener">Mac 下移动硬盘异常退出修复</a><br><a href="https://edonymu.com/2017/01/17/%E8%A7%A3%E5%86%B3macos%E7%A1%AC%E7%9B%98hfs%E5%88%86%E5%8C%BA%E6%97%A0%E6%B3%95%E6%8C%82%E8%BD%BD%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">解决macOS硬盘HFS+分区无法挂载问题</a><br><a href="http://www.jeepxie.net/article/988702.html" target="_blank" rel="noopener">在Mac OS X下修复Disk Utility无法修复的移动硬盘分区</a><br><a href="https://www.v2ex.com/t/120433" target="_blank" rel="noopener">请问硬盘修复失败导致无法挂载有什么解决办法吗？</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="TECH" scheme="http://liyuankun.top/categories/TECH/"/>
    
      <category term="Tools" scheme="http://liyuankun.top/categories/TECH/Tools/"/>
    
    
      <category term="MAC" scheme="http://liyuankun.top/tags/MAC/"/>
    
  </entry>
  
  <entry>
    <title>计算机英语-virus,worm,Spyware,Ransomware,Trojan horse</title>
    <link href="http://liyuankun.top/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%8B%B1%E8%AF%AD-virus-worm-Spyware-Ransomware-Trojan-horse.html"/>
    <id>http://liyuankun.top/计算机英语-virus-worm-Spyware-Ransomware-Trojan-horse.html</id>
    <published>2025-04-28T09:57:32.000Z</published>
    <updated>2025-08-11T09:22:24.734Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="virus-worm-spyware-ransomware-trojan-horse">virus,worm,Spyware,Ransomware,Trojan horse</h2><p>​​Computer virus（计算机病毒）​​：一种编制或者在计算机程序中插入的破坏计算机功能或者数据的计算机程序。它具有自我复制能力，能够通过各种途径（如网络、存储设备等）从一个程序或系统传播到另一个程序或系统，就像生物病毒传播一样，会对计算机系统造成损害，如删除文件、破坏数据、占用系统资源等。<br>​​Computer worm（计算机蠕虫）​​：也是一种能够自我复制的恶意程序，但它与病毒不同，蠕虫不需要附着在正常的程序上，它可以利用网络协议和系统漏洞，独立地在网络中传播。蠕虫通常会占用大量的网络带宽，导致网络拥堵，还可能利用受感染计算机作为跳板进一步攻击其他系统。<br>​​Trojan horse（特洛伊木马）​​：表面上看起来是有用的软件或程序，但实际上隐藏着恶意代码。当用户运行这个看似正常的程序时，木马就会激活，可能会窃取用户的敏感信息（如账号密码、银行卡信息等）、控制用户计算机、打开后门允许攻击者远程访问等。<br>​​Spyware（间谍软件）​​：一种在用户不知情或未授权的情况下，收集用户信息的恶意软件。它可能会监控用户的浏览习惯、记录键盘输入、获取系统信息等，并将这些信息发送给攻击者，用于广告投放、身份盗窃等恶意目的。<br>​​Botnets（僵尸网络）​​：由被黑客控制的众多计算机（称为“僵尸主机”）组成的网络。黑客通过控制这些僵尸主机，可以发起大规模的网络攻击，如分布式拒绝服务攻击（DDoS）、发送垃圾邮件、进行点击欺诈等。僵尸主机通常是在用户不知情的情况下被植入恶意软件而感染的。<br>​​Ransomware（勒索软件）​​：一种恶意软件，它会加密用户的重要数据（如文件、数据库等），使用户无法正常访问这些数据，然后向用户索要赎金（通常是数字货币），以换取解密数据的密钥。如果用户不支付赎金，数据可能永远无法恢复。</p><table><thead><tr><th>恶意软件类型（英文）</th><th>恶意软件类型（中文）</th><th>传播方式</th><th>主要危害</th><th>是否具有自我复制能力</th><th>英文解释</th></tr></thead><tbody><tr><td>Computer virus</td><td>计算机病毒</td><td>可附着于正常程序，通过存储设备、网络等传播</td><td>破坏计算机功能、数据，占用系统资源</td><td>是</td><td>A program capable of attaching itself to a document or to a genuine program. It usually has the ability make copies of itself over and over again, in order to infect and corrupt additional files without a user’s knowledge.</td></tr><tr><td>Computer worm</td><td>计算机蠕虫</td><td>利用网络协议和系统漏洞独立在网络中传播</td><td>占用大量网络带宽，导致网络拥堵，可能进一步攻击其他系统</td><td>是</td><td>A self - replicating program that mainly uses networks to spread itself. Its primary purpose is not to infect files, but to use resources, such as computer memory or network bandwidth.</td></tr><tr><td>Trojan horse</td><td>特洛伊木马</td><td>伪装成有用软件欺骗用户运行</td><td>窃取敏感信息、控制计算机、打开后门</td><td>否</td><td>A malicious program disguised as a legitimate one. The malicious code is usually hidden (or embedded) in an email attachment or in a useful or interesting program, such as a computer game, in order to trick users into installing it.</td></tr><tr><td>Spyware</td><td>间谍软件</td><td>常通过恶意网站、捆绑软件等方式潜入用户系统</td><td>收集用户信息并发送给攻击者</td><td>否</td><td>A malicious program that is usually secretly installed on a computer. Once activated, it gathers and transmits users’ information or actions, such as passwords, credit card numbers or web browsing habits, without their knowledge.</td></tr><tr><td>Botnets</td><td>僵尸网络</td><td>由僵尸主机组成，僵尸主机通过感染恶意软件加入网络</td><td>发起大规模网络攻击（如DDoS、垃圾邮件发送等）</td><td>单个僵尸主机可能通过病毒或蠕虫方式感染，但僵尸网络整体概念侧重于受控集合</td><td>A collection of compromised computers connected in a coordinated fashion for malicious purposes. The compromised machines are often turned into “robots” or “zombies” and used to send out spam, spread malware or launch cyber - attacks.</td></tr><tr><td>Ransomware</td><td>勒索软件</td><td>常通过恶意邮件附件、漏洞利用等方式传播</td><td>加密用户数据，索要赎金</td><td>否</td><td>A type of malware that uses encryption technology to prevent victims from using their computer or accessing their files until a fee is paid. This type of malware is often referred to as a cryptolocker. Once it has infected the computer, a message informs the victim that a given amount must be paid in order to lift the restriction to use the computer.</td></tr></tbody></table><h2 id="trademark-vs-copyright-vs-patent">Trademark Vs Copyright Vs Patent</h2><table><thead><tr><th>英文术语</th><th>中文解释</th><th>英文原文说明</th><th>核心要点对比</th></tr></thead><tbody><tr><td>Trademark ™</td><td>商标</td><td>A trademark identifies the goods or services of a person or organization, differentiating them from those of others. It may take the form of a word, sound, symbol or phrase, or a combination of these. It is often used to protect a company’s brand name and logo.<br><br>（商标可识别个人或组织的商品或服务，使其与他人区分开来。其形式可以是单词、声音、符号、短语或这些的组合，常用于保护公司的品牌名称和标志。）</td><td>1. 定义：用于区分商品或服务来源的标志（文字、声音、符号、短语或组合）。<br>2. 作用：保护品牌名称和标识，防止混淆。<br>3. 示例：苹果公司的“Apple”Logo。</td></tr><tr><td>Copyright (©)</td><td>版权</td><td>A copyright is the exclusive legal right to produce, reproduce, publish or perform intellectual creations, such as literary, artistic, dramatic or musical works. The creator is usually the copyright owner. An employer may hold a copyright on works created by employees, unless otherwise agreed upon.<br><br>（版权是创作者对其原创作品（如文学、艺术、戏剧或音乐作品）享有的独占性法律权利。创作者通常是版权所有者，但雇佣作品通常归雇主所有，除非另有约定。）</td><td>1. 定义：创作者对其原创作品（文学、艺术、戏剧、音乐等）享有的独占性权利。<br>2. 归属：默认归创作者所有，但雇佣作品通常归雇主。<br>3. 权利范围：包括复制、出版、表演等。</td></tr><tr><td>Patent</td><td>专利</td><td>A patent provides a legally protected and exclusive right to an invention. It excludes others from making, using or selling an invention. Once a patent is granted, it can be sold, licensed or used as an asset to negotiate funding.<br><br>（专利为发明提供受法律保护且排他性的权利，禁止他人制造、使用或销售该发明。专利授予后可出售、许可或作为资产用于融资谈判。）</td><td>1. 定义：对发明提供的法律保护和排他性权利。<br>2. 权利范围：禁止他人未经许可制造、使用或销售该发明。<br>3. 附加权益：可转让、许可或作为融资资产。</td></tr></tbody></table><hr><p>补充说明：<br>权利核心差异：<br>• 商标：保护品牌标识（名称/Logo），防止市场混淆。</p><p>• 版权：保护原创作品（文学/艺术等），默认归属创作者（雇主例外）。</p><p>• 专利：保护技术发明，赋予排他性权利并可交易（出售/授权）。</p><p>强调“common international mechanisms”，说明这些权利受全球知识产权体系认可（如《巴黎公约》《伯尔尼公约》等）。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="English Learning" scheme="http://liyuankun.top/categories/English-Learning/"/>
    
      <category term="计算机英语" scheme="http://liyuankun.top/categories/English-Learning/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="Security" scheme="http://liyuankun.top/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>浏览器报错“localhost sent an invalid response.ERR_SSL_PROTOCOL_ERROR”</title>
    <link href="http://liyuankun.top/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%A5%E9%94%99%E2%80%9Clocalhost-sent-an-invalid-response-ERR-SSL-PROTOCOL-ERROR%E2%80%9D.html"/>
    <id>http://liyuankun.top/浏览器报错“localhost-sent-an-invalid-response-ERR-SSL-PROTOCOL-ERROR”.html</id>
    <published>2024-09-03T10:02:25.000Z</published>
    <updated>2025-08-11T09:22:24.733Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>当浏览器访问http的本地开发环境时，<code>http://localhost:4000/</code> , 浏览器报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">localhost sent an invalid response.</span><br><span class="line">ERR_SSL_PROTOCOL_ERROR</span><br></pre></td></tr></table></figure><p>The <code>ERR_SSL_PROTOCOL_ERROR</code> in Chrome typically occurs when you’re trying to access a local development server (like one running on <code>http://localhost:4000</code>) over HTTPS <code>https://localhost:4000</code> instead of HTTP. If your server isn’t set up to handle HTTPS, Chrome may block the connection because it expects a valid SSL certificate, which isn’t usually present on local servers.</p><h2 id="解决方法">解决方法</h2><p>因为HSTS，浏览器会自动把我的http的网址<code>http://localhost:4000/</code> 自动redirect到HTTPS <code>https://localhost:4000</code>, 所以用方法1，2都可以解决。</p><h3 id="前提-确保使用的是http">前提 确保使用的是HTTP</h3><p>Ensure You’re Using HTTP, Not HTTPS:</p><ul><li>Make sure you’re visiting <code>http://localhost:4000</code> (not <code>https://localhost:4000</code>).</li><li>Check the URL bar and explicitly type <code>http://</code> before <code>localhost:4000</code> if necessary.</li></ul><h3 id="方法一-清除hsts设置">方法一 清除HSTS设置</h3><p>Disable HTTPS Enforcement in Chrome:<br>Chrome may automatically redirect to HTTPS if it previously visited the site over HTTPS. You can clear this by:</p><ul><li>Clearing the HSTS Settings for localhost:<ul><li>Go to chrome://net-internals/#hsts in your Chrome browser.</li><li>Under the “Delete domain security policies” section, type localhost and click “Delete”.</li></ul></li></ul><h3 id="方法二-使用浏览器匿名模式-incognito-window">方法二 使用浏览器匿名模式 Incognito Window</h3><p>Sometimes, Chrome caches HSTS settings. Opening an incognito window might avoid the cached redirection to HTTPS.</p><h3 id="方法三-check-for-extensions-or-proxy-settings">方法三 Check for Extensions or Proxy Settings</h3><p>Ensure no Chrome extensions or proxy settings are forcing HTTPS. Disable any such extensions or settings temporarily to test.</p><h3 id="方法四-update-your-server-configuration-optional">方法四 Update Your Server Configuration (Optional)</h3><p>If you need to serve your local site over HTTPS, configure your development server to support HTTPS. This typically involves generating a self-signed SSL certificate and configuring your server to use it.</p><h3 id="方法五-ypass-the-ssl-error-not-recommended-for-regular-use">方法五 ypass the SSL Error (Not Recommended for Regular Use)</h3><p>If you still need to bypass the SSL check, you can type <code>thisisunsafe</code> directly on the error page in Chrome. It will bypass the SSL warning, but this is generally not recommended for regular use.</p><h3 id="总结">总结</h3><ul><li>Start by confirming you’re accessing <code>http://localhost:4000</code>, not <code>https://localhost:4000</code>.</li><li>If Chrome still redirects to HTTPS or shows an SSL error, try clearing the HSTS settings for <code>localhost</code> or using an incognito window.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="TECH" scheme="http://liyuankun.top/categories/TECH/"/>
    
    
  </entry>
  
  <entry>
    <title>JSON Web Token (JWT) 入门教程</title>
    <link href="http://liyuankun.top/JSON-Web-Token-JWT-%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B.html"/>
    <id>http://liyuankun.top/JSON-Web-Token-JWT-入门教程.html</id>
    <published>2024-09-03T08:21:05.000Z</published>
    <updated>2025-08-11T09:22:24.725Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="json-web-token">JSON Web Token</h2><p><code>JWT (JSON Web Token)</code> is a compact, URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is used as the payload of the token. This JSON object is then digitally signed using a secret key or a public/private key pair.</p><h3 id="structure-of-a-jwt">Structure of a JWT</h3><p>它是一个很长的字符串，中间用点（.）分隔成三个部分。注意，JWT 内部是没有换行的，这里只是为了便于展示，将它写成了几行。<br>A JWT consists of three parts, separated by dots (<code>.</code>):</p><ul><li><strong>Header</strong>: Contains metadata about the token, such as the type of token (<code>JWT</code>) and the signing algorithm (<code>HMAC SHA256</code> or <code>RSA</code>).</li><li><strong>Payload</strong>: Contains the claims, which are statements about an entity (typically, the user) and additional data.</li><li><strong>Signature</strong>: Used to verify that the token was not altered after it was issued.</li></ul><p>Example of a JWT:</p><pre><code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Header.Payload.Signature</span></span><br><span class="line"></span><br><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.</span><br><span class="line">eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.</span><br><span class="line">SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c</span><br></pre></td></tr></table></figure></code></pre><h3 id="common-use-cases-for-jwt">Common Use Cases for JWT</h3><ul><li><p><strong>Authentication</strong>: JWTs are often used for securing APIs, where the client receives a token upon successful login and then includes this token in the Authorization header of subsequent requests.</p></li><li><p><strong>Information Exchange</strong>: JWTs can be used to securely transmit information between parties. Since they can be signed, the information can be trusted to be accurate.</p></li></ul><h3 id="summary">Summary</h3><ul><li><p><strong>JWT</strong> is a way to securely transmit information between two parties.</p></li><li><p>It is composed of a header, payload, and signature.</p></li><li><p>JWTs are commonly used for authentication in web applications.</p></li><li><p>Libraries like <code>PyJWT</code> in Python and <code>jsonwebtoken</code> in Node.js make it easy to create and verify JWTs.</p></li><li><p>JWT 默认是不加密，但也是可以加密的。生成原始 Token 以后，可以用密钥再加密一次。</p></li><li><p>JWT 不加密的情况下，不能将秘密数据写入 JWT。</p></li><li><p>JWT 不仅可以用于认证，也可以用于交换信息。有效使用 JWT，可以降低服务器查询数据库的次数。</p></li><li><p>JWT 的最大缺点是，由于服务器不保存 session 状态，因此无法在使用过程中废止某个 token，或者更改 token 的权限。也就是说，一旦 JWT 签发了，在- 之前就会始终有效，除非服务器部署额外的逻辑</p></li><li><p>JWT 本身包含了认证信息，一旦泄露，任何人都可以获得该令牌的所有权限。为了减少盗用，JWT 的有效期应该设置得比较短。对于一些比较重要的权限，使用时应该再次对用户进行认证。</p></li><li><p>为了减少盗用，JWT 不应该使用 HTTP 协议明码传输，要使用 HTTPS 协议传输。</p></li></ul><h3 id="jwt-和-session-id-的区别总结">JWT 和 Session Id 的区别总结</h3><h3 id="jwt">JWT</h3><ul><li>服务器上不保存任何东西，JWT 存储于客户端中</li><li>由服务器 加密（可选）和签名</li><li>token 包含用户的所有信息</li><li>所有信息都存储于 token 本身中</li><li>易于扩展到cluster</li></ul><p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/JSON-Web-Token-JWT-%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/JWT.png" alt="JWT workflow"></p><h3 id="session-id">Session Id</h3><ul><li>Session Id 保存于服务器和客户端中</li><li>加密并签名</li><li>Session Id 是对用户的引用</li><li>服务器需要查找用户并进行必要的检查</li><li>难以扩展到cluster</li></ul><p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/JSON-Web-Token-JWT-%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/session.png" alt="Session workflow"></p><h2 id="jwt教程">JWT教程</h2><p><a href="https://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html" target="_blank" rel="noopener">JSON Web Token 入门教程 阮一峰</a><br><a href="https://www.cnblogs.com/ittranslator/p/14595165.html" target="_blank" rel="noopener">JWT 介绍 - Step by Step</a><br>- <a href="https://dev.to/moe23/intro-to-jwt-mcb" target="_blank" rel="noopener">Intro to JWT - Step by Step</a></p><h2 id="jsonwebtoken-in-node-js"><code>jsonwebtoken</code> in Node.js</h2><ol><li><p>Installing Required Libraries</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install jsonwebtoken</span><br></pre></td></tr></table></figure></li><li><p>Creating a JWT</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">'jsonwebtoken'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Define your secret key</span></span><br><span class="line"><span class="keyword">const</span> secretKey = <span class="string">'your-256-bit-secret'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create the payload (claims)</span></span><br><span class="line"><span class="keyword">const</span> payload = &#123;</span><br><span class="line">sub: <span class="string">'1234567890'</span>, <span class="comment">// subject</span></span><br><span class="line">name: <span class="string">'John Doe'</span>,</span><br><span class="line">iat: <span class="built_in">Math</span>.floor(<span class="built_in">Date</span>.now() / <span class="number">1000</span>), <span class="comment">// issued at</span></span><br><span class="line">exp: <span class="built_in">Math</span>.floor(<span class="built_in">Date</span>.now() / <span class="number">1000</span>) + (<span class="number">60</span> * <span class="number">30</span>) <span class="comment">// expiration time</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Encode the payload to create a JWT</span></span><br><span class="line"><span class="keyword">const</span> token = jwt.sign(payload, secretKey, &#123; <span class="attr">algorithm</span>: <span class="string">'HS256'</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(token);</span><br></pre></td></tr></table></figure></li><li><p>Verifying a JWT</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">jwt.verify(token, secretKey, (err, decoded) =&gt; &#123;</span><br><span class="line"><span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="keyword">if</span> (err.name === <span class="string">'TokenExpiredError'</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Token has expired"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Invalid token"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(decoded);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ol><h2 id="pyjwt-in-python"><code>PyJWT</code> in Python</h2><ol><li><p>Installing Required Libraries</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install PyJWT</span><br></pre></td></tr></table></figure></li><li><p>Creating a JWT</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># Define your secret key</span></span><br><span class="line">secret_key = <span class="string">'your-256-bit-secret'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create the payload (claims)</span></span><br><span class="line">payload = &#123;</span><br><span class="line">    <span class="string">'sub'</span>: <span class="string">'1234567890'</span>,  <span class="comment"># subject</span></span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'John Doe'</span>,</span><br><span class="line">    <span class="string">'iat'</span>: datetime.datetime.utcnow(),  <span class="comment"># issued at</span></span><br><span class="line">    <span class="string">'exp'</span>: datetime.datetime.utcnow() + datetime.timedelta(minutes=<span class="number">30</span>)  <span class="comment"># expiration time</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Encode the payload to create a JWT</span></span><br><span class="line">token = jwt.encode(payload, secret_key, algorithm=<span class="string">'HS256'</span>)</span><br><span class="line"></span><br><span class="line">print(token)</span><br></pre></td></tr></table></figure></li><li><p>Verifying a JWT</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    decoded_token = jwt.decode(token, secret_key, algorithms=[<span class="string">'HS256'</span>])</span><br><span class="line">    print(decoded_token)</span><br><span class="line"><span class="keyword">except</span> jwt.ExpiredSignatureError:</span><br><span class="line">    print(<span class="string">"Token has expired"</span>)</span><br><span class="line"><span class="keyword">except</span> jwt.InvalidTokenError:</span><br><span class="line">    print(<span class="string">"Invalid token"</span>)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="TECH" scheme="http://liyuankun.top/categories/TECH/"/>
    
    
      <category term="Authentication" scheme="http://liyuankun.top/tags/Authentication/"/>
    
  </entry>
  
  <entry>
    <title>Develop LLM powered applications with LangChain - Udemy Course</title>
    <link href="http://liyuankun.top/Develop-LLM-powered-applications-with-LangChain-Udemy-Course.html"/>
    <id>http://liyuankun.top/Develop-LLM-powered-applications-with-LangChain-Udemy-Course.html</id>
    <published>2024-03-12T13:29:12.000Z</published>
    <updated>2025-08-11T09:22:24.704Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="resource-links">Resource Links</h2><ul><li><a href="https://www.udemy.com/course/langchain/?couponCode=ST15MT31224" target="_blank" rel="noopener">Develop LLM powered applications with LangChain - Udemy Course</a></li><li><a href="https://github.com/emarco177/ice_breaker" target="_blank" rel="noopener">Git repo - ice_breaker</a></li><li><a href="https://discord.com/invite/DcxSsbaav7" target="_blank" rel="noopener">Discord discussion</a><ul><li><a href="https://discord.com/channels/1099224935320256545/1115310131505278977" target="_blank" rel="noopener">https://discord.com/channels/1099224935320256545/1115310131505278977</a></li></ul></li><li><a href="https://python.langchain.com/docs/get_started/introduction" target="_blank" rel="noopener">Langchain Python Documentation</a></li></ul><h2 id="课程笔记">课程笔记</h2><h3 id="5-pycharm-setup">5 Pycharm setup</h3><ul><li><a href="https://www.youtube.com/watch?v=6Qmnh5C4Pmo&amp;t=1s" target="_blank" rel="noopener">Pipenv Crash Course - Youtube</a><ul><li><a href="https://pipenv.pypa.io/en/latest/" target="_blank" rel="noopener">Pipenv官方文档</a></li><li><a href="https://juejin.cn/post/6844904202737713160" target="_blank" rel="noopener">Python—pipenv精心整理教程</a><ul><li>安装pipenv <code>sudo pip install pipenv</code>注：无法用pip管理的包，pipenv同样无法使用。pipenv依赖：psutil, virtualenv-clone, pew, certifi, urllib3, chardet, requests, mccabe, pyflakes, pycodestyle, flake8等第三方模块。</li><li><code>pipenv shell</code>  生成<code>Pipfile</code>文件</li><li><code>pipenv install langchain</code> 即可生成<code>Pipfile.lock</code>文件</li></ul></li></ul></li></ul><p>课程设置：<br><img src="./Develop-LLM-powered-applications-with-LangChain-Udemy-Course/pycharm1.png" alt="Pycharm setup 1"><br><img src="./Develop-LLM-powered-applications-with-LangChain-Udemy-Course/pycharm2.png" alt="Pycharm setup 2"></p><p>我的设置，添加interpreter:<br>Pipenv Executable: <code>/Users/yuanli/anaconda3/bin/pipenv</code><br><img src="./Develop-LLM-powered-applications-with-LangChain-Udemy-Course/pycharm2-2.png" alt="Pycharm my setup 2"></p><p>成功后： <code>/Users/yuanli/.local/share/virtualenvs/ice_breaker-Ofs_l0Re/bin/python</code><br><img src="./Develop-LLM-powered-applications-with-LangChain-Udemy-Course/pycharm2-3.png" alt="Pycharm my setup 3"></p><p><img src="./Develop-LLM-powered-applications-with-LangChain-Udemy-Course/pycharm3.png" alt="Pycharm setup 3"><br><img src="./Develop-LLM-powered-applications-with-LangChain-Udemy-Course/pycharm4.png" alt="Pycharm setup 4"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Enable the dev tools in the Microsoft Teams desktop client</title>
    <link href="http://liyuankun.top/Enable-the-dev-tools-in-the-Microsoft-Teams-desktop-client.html"/>
    <id>http://liyuankun.top/Enable-the-dev-tools-in-the-Microsoft-Teams-desktop-client.html</id>
    <published>2024-02-27T08:56:25.000Z</published>
    <updated>2025-08-11T09:22:24.716Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="enable-dev-mode-打开microsoft-teams-desktop的开发模式">Enable Dev Mode 打开Microsoft Teams desktop的开发模式</h1><p><a href="https://learn.microsoft.com/en-us/microsoftteams/platform/tabs/how-to/developer-tools" target="_blank" rel="noopener">微软官方文档DevTools for Microsoft Teams tabs</a></p><h2 id="mac上">Mac上</h2><p>1 Click Teams tray icon 7 times. (快速左键点击7次 Teams app在Mac Dock上的图标)<br><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Enable-the-dev-tools-in-the-Microsoft-Teams-desktop-client/TeamsIconDock.png" alt="Mac Dock上的Teams app图标"></p><p>2 在最上方的menu bar菜单栏里面，会多一项&quot;Development&quot;.</p><p>Enable Dev Mode前：<br><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Enable-the-dev-tools-in-the-Microsoft-Teams-desktop-client/WithoutDev.png" alt="Development disable"><br>Enable Dev Mode后：<br><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Enable-the-dev-tools-in-the-Microsoft-Teams-desktop-client/Dev.png" alt="Development enable"></p><ul><li>“Devopment”<ul><li>Toggle DevTools (Option + Command + I)</li></ul></li></ul><h2 id="windows">Windows</h2><ul><li>Open Show hidden items to see the Teams tray icon</li><li>Click Teams tray icon 7 times. (Normal left click)</li><li>Now right click the Teams icon and you’ll see all Dev options.</li></ul><h2 id="reference-links">Reference Links</h2><ul><li><a href="https://stackoverflow.com/questions/50678907/how-can-i-open-the-dev-tools-in-the-microsoft-teams-desktop-client" target="_blank" rel="noopener">(How) can I open the dev tools in the Microsoft Teams desktop client?</a></li><li><a href="https://thechriskent.com/2023/11/02/enabling-dev-tools-in-the-new-microsoft-teams-client/" target="_blank" rel="noopener">Enabling Dev Tools in the New Microsoft Teams Client</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>React 对比函数组件和类组件</title>
    <link href="http://liyuankun.top/React-%E5%AF%B9%E6%AF%94%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6%E5%92%8C%E7%B1%BB%E7%BB%84%E4%BB%B6.html"/>
    <id>http://liyuankun.top/React-对比函数组件和类组件.html</id>
    <published>2023-12-27T10:54:37.000Z</published>
    <updated>2025-08-11T09:22:24.729Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="rendering-jsx">Rendering JSX</h2><p>首先，它们的明显区别在于语法。正如它们的名字一样，功能组件只是一个返回 JSX 的普通 JavaScript 函数。类组件是一个扩展了 React.Component 的 JavaScript 类，它有一个 render 方法。有点困惑？让我们来看一个简单的例子。<br>功能组件是一个返回 JSX 的函数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> FunctionalComponent = <span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="comment">// arrow functions</span></span><br><span class="line"> <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">FunctionalComponent</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在定义类组件时，必须创建一个扩展了 <code>React.Component</code> 的类。要渲染的 JSX 将在 render 方法中返回。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClassComponent</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line"> render() &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="passing-props">Passing props</h2><p>传递props可能会让人感到困惑，让我们来看看类和功能组件中是如何编写props的。假设我们像下面这样传递名称为 &quot;propsA &quot;的props。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Component name=<span class="string">"propsA"</span> /&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> FunctionalComponent = <span class="function">(<span class="params">&#123; name &#125;</span>) =&gt;</span> &#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在功能组件中，我们将props作为函数的参数传递。请注意，我们在这里使用了destructuring。或者，我们也可以不使用destructuring。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> FunctionalComponent = <span class="function">(<span class="params">props</span>) =&gt;</span> &#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;props.name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>既然它是一个类，就需要用它来引用props。当然，在使用基于类的组件时，我们可以使用destructuring来获取props内部的名称。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClassComponent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; name &#125; = <span class="keyword">this</span>.props;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123; name &#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="handling-state">Handling state</h2><h3 id="counter-using-class-components">Counter using Class Components</h3><p>这是用 ReactJS 构建的大多数现代网络应用的基础。这些组件是简单的类（由为应用程序添加功能的多个函数组成）。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">"react"</span>; </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClassComponent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123; </span><br><span class="line">    <span class="keyword">constructor</span>() &#123; </span><br><span class="line">        <span class="keyword">super</span>(); </span><br><span class="line">        <span class="keyword">this</span>.state = &#123; </span><br><span class="line">            count: <span class="number">0</span> </span><br><span class="line">        &#125;; </span><br><span class="line">        <span class="keyword">this</span>.increase = <span class="keyword">this</span>.increase.bind(<span class="keyword">this</span>); </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    increase() &#123; </span><br><span class="line">        <span class="keyword">this</span>.setState(&#123; <span class="attr">count</span>: <span class="keyword">this</span>.state.count + <span class="number">1</span> &#125;); </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    render() &#123; </span><br><span class="line">        <span class="keyword">return</span> ( </span><br><span class="line">            &lt;div style=&#123;&#123; <span class="attr">margin</span>: <span class="string">'50px'</span> &#125;&#125;&gt; </span><br><span class="line">                &lt;h1&gt;Welcome to Geeks <span class="keyword">for</span> Geeks &lt;<span class="regexp">/h1&gt; </span></span><br><span class="line"><span class="regexp">                &lt;h3&gt;Counter App using Class Component : &lt;/</span>h3&gt; </span><br><span class="line">                &lt;h2&gt; &#123;<span class="keyword">this</span>.state.count&#125;&lt;<span class="regexp">/h2&gt; </span></span><br><span class="line"><span class="regexp">                &lt;button onClick=&#123;this.increase&#125;&gt; Add&lt;/</span>button&gt; </span><br><span class="line">            &lt;<span class="regexp">/div&gt; </span></span><br><span class="line"><span class="regexp">        ) </span></span><br><span class="line"><span class="regexp">    &#125; </span></span><br><span class="line"><span class="regexp">&#125; </span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default ClassComponent;</span></span><br></pre></td></tr></table></figure><h3 id="counter-using-functional-components">Counter using Functional Components</h3><p>功能组件是在 React 中工作时会遇到的一些更常见的组件。它们只是 JavaScript 函数。我们可以通过编写 JavaScript 函数为 React 创建一个功能组件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; useState &#125; <span class="keyword">from</span> <span class="string">"react"</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> FunctionalComponent = <span class="function"><span class="params">()</span> =&gt;</span> &#123; </span><br><span class="line">    <span class="keyword">const</span> [count, setCount] = useState(<span class="number">0</span>); </span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> increase = <span class="function"><span class="params">()</span> =&gt;</span> &#123; </span><br><span class="line">        setCount(count + <span class="number">1</span>); </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ( </span><br><span class="line">        &lt;div style=&#123;&#123; <span class="attr">margin</span>: <span class="string">'50px'</span> &#125;&#125;&gt; </span><br><span class="line">            &lt;h1&gt;Welcome to Geeks <span class="keyword">for</span> Geeks &lt;<span class="regexp">/h1&gt; </span></span><br><span class="line"><span class="regexp">            &lt;h3&gt;Counter App using Functional Component : &lt;/</span>h3&gt; </span><br><span class="line">            &lt;h2&gt;&#123;count&#125;&lt;<span class="regexp">/h2&gt; </span></span><br><span class="line"><span class="regexp">            &lt;button onClick=&#123;increase&#125;&gt;Add&lt;/</span>button&gt; </span><br><span class="line">        &lt;<span class="regexp">/div&gt; </span></span><br><span class="line"><span class="regexp">    ) </span></span><br><span class="line"><span class="regexp">&#125; </span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default FunctionalComponent;</span></span><br></pre></td></tr></table></figure><p>对于功能组件，我们使用hooks（useState）来管理状态。如果编写了一个功能组件，并意识到需要为其添加一些状态，以前必须将其转换为类组件。现在，可以在现有的函数组件中使用hooks来管理状态，而无需将其转换为类组件。hooks是 React 16.8 新增的功能。它们让无需编写类即可使用状态和其他 React 功能。我们可以在功能组件中使用hooks来代替类，因为这是一种更简单的状态管理方式。</p><ul><li>hooks只能用于功能组件，不能用于类内组件!</li><li>hooks 详细介绍可以看之前的文章： <a href="./React-16-Hooks.html">hooks</a></li></ul><h2 id="lifecycle-methods">Lifecycle Methods</h2><p>最后，让我们来谈谈生命周期。生命周期在渲染的时间安排上起着重要作用。对于那些从类组件迁移到功能组件的人来说，一定很想知道有什么可以替代类组件中的 <code>componentDidMount()</code> 等生命周期方法。没错，有一个hook可以完美地实现这一目的，让我们一起来看看吧！</p><h3 id="on-mounting-componentdidmount">On Mounting (componentDidMount)</h3><p>生命周期方法 <code>componentDidMount</code> 会在第一次render完成后立即调用。以前有一个 componentWillMount 会在第一次render之前调用，但它被认为是传统方法，不建议在较新版本的 React 中使用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> FunctionalComponent = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"> React.useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">"Hello"</span>);</span><br><span class="line"> &#125;, []); <span class="comment">// [] 作为依赖数组，与componentDidMount等效，会在第一次render完成后立即调用</span></span><br><span class="line"> <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, World<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>取代 <code>componentDidMount</code>，我们使用第二个参数为 <code>[]</code> 的 <code>useEffect</code> hook。 <code>useState</code> hook的第二个参数通常是一个包含变化状态的数组，而 <code>useEffect</code> 只会在这些选定的变化中被调用。但如果是像本例这样的空数组，则会在挂载时调用一次。这可以完美替代 <code>componentDidMount</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClassComponent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line"> componentDidMount() &#123;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">"Hello"</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> render() &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, World<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里发生的事情基本上是一样的：<code>componentDidMount</code> 是一个生命周期方法，在第一次render后会被调用一次。</p><h3 id="on-unmounting-componentwillunmount">On Unmounting (componentWillUnmount)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClassComponent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line"> componentWillUnmount() &#123;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">"Bye"</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> render() &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Bye, World<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> FunctionalComponent = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"> React.useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> &#123;       <span class="comment">// 返回一个函数</span></span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">"Bye"</span>);</span><br><span class="line">   &#125;;</span><br><span class="line"> &#125;, []);</span><br><span class="line"> <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Bye, World<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>好消息是，我们也可以使用 <code>useState</code> 钩子来卸载。但要注意，语法有些不同。你需要做的是在 <code>useEffect</code> 函数中返回一个在卸载时运行的<code>函数</code>。这在需要清理订阅（如 <code>clearInterval</code> 函数）时尤其有用，否则会在较大的项目中造成严重的内存泄漏。使用 useEffect 的一个好处是，我们可以在同一个地方编写挂载和卸载函数。例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// Function to be called when the component mounts</span></span><br><span class="line">  <span class="keyword">const</span> handleEvent = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Event occurred:'</span>, event);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 挂载 Add event listener when the component mounts</span></span><br><span class="line">  <span class="built_in">window</span>.addEventListener(<span class="string">'yourEventType'</span>, handleEvent);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 卸载 Clean up the event listener when the component unmounts</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.removeEventListener(<span class="string">'yourEventType'</span>, handleEvent);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;, []); <span class="comment">// Empty dependency array means this effect runs only once (on mount)</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// custom hook</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useDelayedRender = <span class="function">(<span class="params">delayTime: number</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> [shouldRender, setShouldRender] = useState(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">  useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> timeoutId = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="comment">// 挂载 </span></span><br><span class="line">      setShouldRender(<span class="literal">true</span>)</span><br><span class="line">    &#125;, delayTime)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> clearTimeout(timeoutId) <span class="comment">// 卸载</span></span><br><span class="line">  &#125;, [delayTime])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> shouldRender</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// Function to be called at intervals</span></span><br><span class="line">  <span class="keyword">const</span> updateValue = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    setValue(<span class="function">(<span class="params">prevValue</span>) =&gt;</span> prevValue + <span class="number">1</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 挂载 Set an interval when the component mounts</span></span><br><span class="line">  <span class="keyword">const</span> intervalId = setInterval(updateValue, <span class="number">1000</span>); <span class="comment">// Replace 1000 with your desired interval in milliseconds</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Clean up the interval when the component unmounts</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    clearInterval(intervalId); <span class="comment">// 卸载</span></span><br><span class="line">  &#125;;</span><br><span class="line">&#125;, []); <span class="comment">// Empty dependency array means this effect runs only once (on mount)</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="对比函数组件和类组件总结">对比函数组件和类组件总结</h2><table><thead><tr><th><a href="https://www.geeksforgeeks.org/reactjs-functional-components/" target="_blank" rel="noopener"><strong>Functional Components</strong></a></th><th><a href="https://www.geeksforgeeks.org/reactjs-class-based-components/" target="_blank" rel="noopener"><strong>Class Components</strong></a></th></tr></thead><tbody><tr><td>功能组件只是一个纯 JavaScript pure函数，它接受props作为参数，并返回一个 React 元素（JSX）。</td><td>类组件要求您从 React.Component 扩展（extend），并创建返回 React 元素的render函数。并创建一个返回 React 元素的render函数。</td></tr><tr><td>no <code>render</code> method</td><td>必须有<code>render()</code> method 返回 JSX (语法上类似于HTML)</td></tr><tr><td>功能组件从上到下依次运行，一旦功能返回，它就无法继续存活。Functional components run from top to bottom and once the function is returned it can’t be kept alive.</td><td>类组件被实例化后，不同的生命周期方法会保持活力，并根据类组件所处的阶段运行和调用。 The class component is instantiated and different life cycle method is kept alive and is run and invoked depending on the phase of the class component.</td></tr><tr><td>也被称为无状态组件，因为它们只是接受数据并以某种形式显示出来，主要负责渲染用户界面。Also known as Stateless components as they simply accept data and display them in some form, they are mainly responsible for rendering UI.</td><td>也被称为有状态组件，因为它们实现了逻辑和状态。Also known as Stateful components because they implement logic and state.</td></tr><tr><td>功能组件中不能使用 React 生命周期方法（例如 componentDidMount）。React lifecycle methods (for example, componentDidMount) cannot be used in functional components.</td><td>React 生命周期方法可用于类组件内部（例如 componentDidMount）。React lifecycle methods can be used inside class components (for example, componentDidMount).</td></tr><tr><td>Hooks可以很容易地用于功能组件，使其成为有状态的组件。Hooks can be easily used in functional components to make them Stateful. <br>Example:<br><code>const [name,SetName]= React.useState(' ')</code></td><td>在类组件中实现hook需要不同的语法。It requires different syntax inside a class component to implement hooks.<br>Example:<br><code>constructor(props) {  super(props);  this.state = {name: ' '}</code></td></tr><tr><td>不使用构造函数。Constructors are not used.</td><td>使用构造函数，因为它需要存储状态。Constructor is used as it needs to store state.</td></tr></tbody></table><h2 id="reference-links">Reference Links</h2><ul><li><a href="https://www.geeksforgeeks.org/differences-between-functional-components-and-class-components/" target="_blank" rel="noopener">Differences between Functional Components and Class Components</a></li><li><a href="https://www.twilio.com/blog/react-choose-functional-components" target="_blank" rel="noopener">Understanding Functional Components vs. Class Components in React</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="TECH" scheme="http://liyuankun.top/categories/TECH/"/>
    
      <category term="FrontEnd" scheme="http://liyuankun.top/categories/TECH/FrontEnd/"/>
    
      <category term="React" scheme="http://liyuankun.top/categories/TECH/FrontEnd/React/"/>
    
    
      <category term="React 16" scheme="http://liyuankun.top/tags/React-16/"/>
    
  </entry>
  
  <entry>
    <title>AI相关软件大集合</title>
    <link href="http://liyuankun.top/AI%E7%9B%B8%E5%85%B3%E8%BD%AF%E4%BB%B6%E5%A4%A7%E9%9B%86%E5%90%88.html"/>
    <id>http://liyuankun.top/AI相关软件大集合.html</id>
    <published>2023-12-06T10:09:02.000Z</published>
    <updated>2025-08-11T09:22:24.703Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li><p>上一篇列举了更多的AI相关的工具： <a href="./2023-most-popular-and-useful-AI-tools.html#%E5%85%B6%E4%BB%96-ai-%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90">2023 most popular and useful AI tools</a></p></li><li><p><a href="https://www.producthunt.com/topics/artificial-intelligence" target="_blank" rel="noopener">Product Hunt - Artificial Intelligence</a>  AI软件列表</p></li></ul><p>这一篇列举的主要是原本的软件又添加了AI功能：</p><ul><li>[x] <a href="https://www.warp.dev/" target="_blank" rel="noopener">Warp</a> <a href="https://github.com/warpdotdev/Warp" target="_blank" rel="noopener">Git开源</a> The terminal for the 21st century。<ul><li>Warp解决第一个痛点，是通过减少配置、方便输入，优化输出，增加常用命令行自动提示(通过fig)，方便查看历史记录，可定义流程，等等。</li><li>解决第二个痛点，则是增加协作功能。例如可以共享自己的命令行、设置项、历史记录。</li><li><a href="https://www.warp.dev/blog/introducing-warp-ai" target="_blank" rel="noopener">Warp AI</a>： 可以直接问Warp AI怎样write script 来实现特定功能。</li></ul></li><li><a href="https://slides.com/news/slides-ai/" target="_blank" rel="noopener">Slides AI</a> Slides是一个在线做PPT的网页，现在推出了AI功能</li><li><a href="https://www.notion.so/product/ai" target="_blank" rel="noopener">Notion AI</a> 笔记软件</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="TECH" scheme="http://liyuankun.top/categories/TECH/"/>
    
      <category term="AI" scheme="http://liyuankun.top/categories/TECH/AI/"/>
    
    
  </entry>
  
  <entry>
    <title>ChatGPT Prompt Engineering 提示词使用技巧</title>
    <link href="http://liyuankun.top/ChatGPT-Prompt-Engineering-%E6%8F%90%E7%A4%BA%E8%AF%8D%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7.html"/>
    <id>http://liyuankun.top/ChatGPT-Prompt-Engineering-提示词使用技巧.html</id>
    <published>2023-12-05T06:04:19.000Z</published>
    <updated>2025-08-11T09:22:24.704Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="chatgpt-prompt-课程">ChatGPT Prompt 课程</h2><h3 id="吴恩达课程-chatgpt-prompt-engineering-for-developers">吴恩达课程-ChatGPT Prompt Engineering for Developers</h3><ul><li><p>课程链接：<a href="https://www.deeplearning.ai/short-courses/chatgpt-prompt-engineering-for-developers/" target="_blank" rel="noopener">ChatGPT Prompt Engineering for Developers</a></p></li><li><p>DeepLearningAI 的YouTUbe： <a href="https://www.youtube.com/@Deeplearningai/videos" target="_blank" rel="noopener">https://www.youtube.com/@Deeplearningai/videos</a></p></li><li><p>吴恩达《ChatGPT Prompt Engineering for Developers》课程中文版:</p><ul><li><a href="https://github.com/datawhalechina/prompt-engineering-for-developers" target="_blank" rel="noopener">Git 课程中文版</a></li><li>bilibili课程中文版视频地址：<a href="https://www.bilibili.com/video/BV1Bo4y1A7FU" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1Bo4y1A7FU</a></li></ul></li></ul><h3 id="coursera-prompt-engineering">Coursera - prompt engineering</h3><ul><li>课程链接：<a href="https://www.coursera.org/learn/prompt-engineering?adgroupid=100171642259&amp;adposition=&amp;campaignid=9777751587&amp;creativeid=661484949103&amp;device=c&amp;devicemodel=&amp;gclid=EAIaIQobChMI7eTbmdzE_wIVgvXICh26YwMMEAAYASAAEgKdJvD_BwE&amp;hide_mobile_promo=&amp;keyword=coursera%20%2B&amp;matchtype=b&amp;network=g&amp;utm_campaign=B2C_NAMER__coursera_FTCOF_courseraplus_country-US-country-CA&amp;utm_medium=sem&amp;utm_source=gg" target="_blank" rel="noopener">Coursera - prompt engineering</a></li><li>7天内免费学习</li></ul><h2 id="chatgpt-prompt-资料">ChatGPT Prompt 资料</h2><ul><li><a href="https://www.promptingguide.ai/techniques/zeroshot" target="_blank" rel="noopener">Prompt Engineering Guide</a></li><li><a href="https://learnprompting.org/" target="_blank" rel="noopener">learn prompting</a></li><li><a href="https://github.com/prompt-engineering" target="_blank" rel="noopener">Git - Prompt Engineering Topic</a><ul><li><a href="https://github.com/prompt-engineering/prompt-patterns" target="_blank" rel="noopener">prompt-patterns</a> Prompt 编写模式：如何将思维框架赋予机器</li><li><a href="https://github.com/prompt-engineering/awesome-prompt-engineering" target="_blank" rel="noopener">awesome-prompts</a></li><li><a href="https://github.com/dair-ai/Prompt-Engineering-Guide" target="_blank" rel="noopener">Prompt-Engineering-Guide</a> Prompt工程师课程和论文</li></ul></li></ul><h2 id="chatgpt-prompt-提示词库">ChatGPT Prompt 提示词库</h2><ul><li><a href="https://github.com/rockbenben/ChatGPT-Shortcut" target="_blank" rel="noopener">ChatGPT Shortcut</a> 好用的提示词聚合网站 <a href="https://www.aishort.top/" target="_blank" rel="noopener">ChatGPT Shortcut</a>, 简单易用的 ChatGPT 快捷指令表，让生产力倍增！ | 标签筛选、关键词搜索和一键复制 Prompts</li><li><a href="https://qddmercny4.feishu.cn/sheets/shtcnMklYu0WsXEDUXXanrSEB2m" target="_blank" rel="noopener">针对ChatGPT和NewBing效果最好的中文提示词</a></li></ul><h2 id="prompt-pattern-总结">Prompt Pattern 总结</h2><table><thead><tr><th>Prompt Pattern</th><th>Fundamental Contextual Statements</th><th>Example</th></tr></thead><tbody><tr><td>Question Refinement Pattern 优化提问</td><td>- From now on, whenever I ask a question, suggest a better version of the question to use instead<br> - (Optional) Prompt me if I would like to use the better version instead</td><td>- Whenever I ask a question about dieting, suggest a better version of the question that emphasizes healthy eating habits and sound nutrition. Ask me for the first question to refine.<br>- Whenever I ask a question about who is the greatest of all time (GOAT), suggest a better version of the question that puts multiple players unique accomplishments into perspective. Ask me for the first question to refine.</td></tr><tr><td>Cognitive Verifier Pattern 认知验证</td><td>生成补充问题 - When you are asked a question, follow these rules<br> - Generate a number of additional questions that would help more accurately answer the question<br> - Combine the answers to the individual questions to produce the final answer to the overall question</td><td>- When you are asked to create a recipe, follow these rules. Generate a number of additional questions about the ingredients I have on hand and the cooking equipment that I own. Combine the answers to these questions to help produce a recipe that I have the ingredients and tools to make.<br>- When you are asked to plan a trip, follow these rules. Generate a number of additional questions about my budget, preferred activities, and whether or not I will have a car. Combine the answers to these questions to better plan my itinerary.</td></tr><tr><td>Audience Persona Pattern  观众角色</td><td>- Explain X to me.<br> - Assume that I am Persona</td><td>- Explain large language models to me. Assume that I am a bird.<br>- Explain how the supply chains for US grocery stores work to me. Assume that I am Genghis Khan.</td></tr><tr><td>Flipped Interaction Pattern 反向交互</td><td>gpt提问 - I would like you to ask me questions to achieve X<br> - You should ask questions until condition Y is met or to achieve this goal (alternatively, forever)<br> - (Optional) ask me the questions one at a time, two at a time, ask me the first question, etc.</td><td>- I would like you to ask me questions to help me create variations of my marketing materials. You should ask questions until you have sufficient information about my current draft messages, audience, and goals. Ask me the first question.<br>- I would like you to ask me questions to help me diagnose a problem with my Internet. Ask me questions until you have enough information to identify the two most likely causes. Ask me one question at a time. Ask me the first question.</td></tr><tr><td>Game Play Pattern 游戏</td><td>- Create a game for me around X OR we are going to play an X game<br> - One or more fundamental rules of the game</td><td>- Create a cave exploration game for me to discover a lost language. Describe where I am in the cave and what I can do. I should discover new words and symbols for the lost civilization in each area of the cave I visit. Each area should also have part of a story that uses the language. I should have to collect all the words and symbols to be able to understand the story. Tell me about the first area and then ask me what action to take.<br>- Create a group party game for me involving DALL-E. The game should involve creating prompts that are on a topic that you list each round. Everyone will create a prompt and generate an image with DALL-E. People will then vote on the best prompt based on the image it generates. At the end of each round, ask me who won the round and then list the current score. Describe the rules and then list the first topic.</td></tr><tr><td>Template Pattern 模版</td><td>- I am going to provide a template for your output<br> - X is my placeholder for content<br> - Try to fit the output into one or more of the placeholders that I list<br> - Please preserve the formatting and overall template that I provide<br> - This is the template: PATTERN with PLACEHOLDERS</td><td>- Create a random strength workout for me today with complementary exercises. I am going to provide a template for your output . CAPITALIZED WORDS are my placeholders for content. Try to fit the output into one or more of the placeholders that I list. Please preserve the formatting and overall template that I provide. This is the template: NAME, REPS @ SETS, MUSCLE GROUPS WORKED, DIFFICULTY SCALE 1-5, FORM NOTES<br>- Please create a grocery list for me to cook macaroni and cheese from scratch, garlic bread, and marinara sauce from scratch. I am going to provide a template for your output . <placeholder> are my placeholders for content. Try to fit the output into one or more of the placeholders that I list. Please preserve the formatting and overall template that I provide. This is the template: Aisle <name of aisle>: <item needed from aisle>, <qty> (&lt;dish(es) used in&gt;</qty></item></name></placeholder></td></tr><tr><td>Meta Language Creation Pattern  元语言创建模式</td><td>创建快捷指令 - When I say X, I mean Y (or would like you to do Y)</td><td>- When I say “variations(<something>)”, I mean give me ten different variations of <something> o Usage: “variations(company names for a company that sells software services for prompt engineering)” o Usage: “variations(a marketing slogan for pickles)”<br>- When I say Task X [Task Y], I mean Task X depends on Task Y being completed first. o Usage: “Describe the steps for building a house using my task dependency language.” o Usage: “Provide an ordering for the steps: Boil Water [Turn on Stove], Cook Pasta [Boil Water], Make Marinara [Turn on Stove], Turn on Stove [Go Into Kitchen]”</something></something></td></tr><tr><td>Recipe Pattern 食谱/配方</td><td>补充缺失步骤 - I would like to achieve X<br> - I know that I need to perform steps A, B, C<br> - Provide a complete sequence of steps for me<br> - Fill in any missing steps<br> - (Optional) Identify any unnecessary steps</td><td>- I would like to purchase a house. I know that I need to perform steps make an offer and close on the house. Provide a complete sequence of steps for me. Fill in any missing steps.<br>- I would like to drive to NYC from Nashville. I know that I want to go through Asheville, NC on the way and that I don’t want to drive more than 300 miles per day. Provide a complete sequence of steps for me. Fill in any missing steps.</td></tr><tr><td>Alternative Approaches Pattern 可替代方法</td><td>列出其他可选方案 If there are alternative ways to accomplish a task X that I give you, list the best alternate approaches<br> (Optional) compare/contrast the pros and cons of each approach<br> (Optional) include the original way that I asked<br> (Optional) prompt me for which approach I would like to use</td><td>- For every prompt I give you, If there are alternative ways to word a prompt that I give you, list the best alternate wordings . Compare/contrast the pros and cons of each wording.<br>- For anything that I ask you to write, determine the underlying problem that I am trying to solve and how I am trying to solve it. List at least one alternative approach to solve the problem and compare / contrast the approach with the original approach implied by my request to you.</td></tr><tr><td>Ask for Input Pattern 请求输入</td><td>在每次交互结束后，GPT请求新的输入 - Ask me for input X</td><td>- From now on, I am going to cut/paste email chains into our conversation. You will summarize what each person’s points are in the email chain. You will provide your summary as a series of sequential bullet points. At the end, list any open questions or action items directly addressed to me. My name is Jill Smith. Ask me for the first email chain.<br>- From now on, translate anything I write into a series of sounds and actions from a dog that represents the dog’s reaction to what I write. Ask me for the first thing to translate.<br>- Whenever I ask you to write a prompt for me to accomplish a task, list what the task is, list alternative approaches for completing the task, and then write a prompt for yourself for each approach. When you are done, ask me for the next prompt to create alternatives for.<br>- Whenever I ask you to write a prompt for me to accomplish a task, list what the task is, list alternative approaches for completing the task, and then write a prompt for yourself for each approach. When you are done, ask me for the next prompt to create alternatives for. Ask me for the first task.</td></tr><tr><td>Outline Expansion Pattern 大纲扩展</td><td>- Act as an outline expander.<br> - Generate a bullet point outline based on the input that I give you and then ask me for which bullet point you should expand on.<br> - Create a new outline for the bullet point that I select.<br> - At the end, ask me for what bullet point to expand next.<br> - Ask me for what to outline.</td><td>- Act as an outline expander. Generate a bullet point outline based on the input that I give you and then ask me for which bullet point you should expand on. Each bullet can have at most 3-5 sub-bullets. The bullets should be numbered using the pattern [A-Z].[i-v].[* through ****]. Create a new outline for the bullet point that I select. At the end, ask me for what bullet point to expand next. Ask me for what to outline.<br>- Act as an outline expander. Generate a bullet point outline based on the input that I give you and then ask me for which bullet point you should expand on. Create a new outline for the bullet point that I select. At the end, ask me for what bullet point to expand next. Ask me for what to outline.</td></tr><tr><td>Menu Actions Pattern 菜单操作</td><td>- Whenever I type: X, you will do Y.<br> - (Optional, provide additional menu items) Whenever I type Z, you will do Q.<br> - At the end, you will ask me for the next action.</td><td>- Whenever I type: “add FOOD”, you will add FOOD to my grocery list and update my estimated grocery bill. Whenever I type “remove FOOD”, you will remove FOOD from my grocery list and update my estimated grocery bill. Whenever I type “save” you will list alternatives to my added FOOD to save money. At the end, you will ask me for the next action. Ask me for the first action.<br>- Whenever I type: &quot;write &lt; Bullet Point&gt; <paragraphs>&quot;, you will write content for the selected bullet point <bullet point>. You will write <paragraphs> of text. Whenever I type just “‹Bullet Point&gt;” you will expand that bullet point. At the end, you will ask me for the next action.</paragraphs></bullet></paragraphs></td></tr><tr><td>Fact Check List Pattern 事实验证</td><td>- Generate a set of facts that are contained in the output<br> - The set of facts should be inserted at POSITION in the output<br> - The set of facts should be the fundamental facts that could undermine the veracity of the output if any of them are incorrect</td><td>- Whenever you output text, generate a set of facts that are contained in the output. The set of facts should be inserted at the end of the output. The set of facts should be the fundamental facts that could undermine the veracity of the output if any of them are incorrect.</td></tr><tr><td>Tail Generation Pattern  尾部生成模式</td><td>- At the end, repeat Y and/or ask me for X.</td><td>- Act as an outline expander. Generate a bullet point outline based on the input that I give you and then ask me for which bullet point you should expand on. Create a new outline for the bullet point that I select. At the end, ask me for what bullet point to expand next. Ask me for what to outline.<br>- From now on, at the end of your output, add the disclaimer “This output was generated by a large language model and may contain errors or inaccurate statements. All statements should be fact-checked.” Ask me for the first thing to write about.<br>- Whenever I ask you to write a prompt for me to accomplish a task, list what the task is, list alternative approaches for completing the task, and then write a prompt for yourself for each approach. When you are done, ask me for the next prompt to create alternatives for. Ask me what I want you to write a prompt for.<br>- Output: xxxx Please let me know if you have another task for which you’d like me to write a prompt and create alternative approaches.</td></tr><tr><td>Semantic Filter Pattern 语义过滤模式</td><td>- Filter this information to remove X</td><td>- Filter this information to remove any personally identifying information or information that could potentially be used to re-identify the person.<br>- Filter this email to remove redundant information.<br>- Filter this information to remove all dates and rewrite the text as little as possible to fix the issues caused by the date removals:<br>- Filter the information below to remove any information that would help someone figure out that the patient has diabetes. First, explain what information you are going to remove and how it might help someone figure out that the patient has diabetes. Then, provide the filtered information.</td></tr><tr><td>Few-Shot Prompting</td><td><a href="https://www.promptingguide.ai/techniques/fewshot" target="_blank" rel="noopener">举例子</a></td><td>- This is awesome! // Negative<br>- This is bad! // Positive<br>- Wow, that movie was rad! // Positive<br>- What a horrible show! //</td></tr><tr><td><a href="https://www.promptingguide.ai/techniques/cot" target="_blank" rel="noopener">Chain-of-Thought Prompting</a> <code>思维链（CoT）</code></td><td>prompt with a statement or question, and then generating a response or continuation based on that prompt.</td><td><img src="https://www.promptingguide.ai/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcot.1933d9fe.png&amp;w=1920&amp;q=75" alt="CoT Example"></td></tr><tr><td><a href="https://www.promptingguide.ai/techniques/consistency" target="_blank" rel="noopener">Self-Consistency</a> 自我一致性</td><td>取代<code>思维链（CoT）</code>提示中使用的naive greedy decoding(天真贪婪解码)。其理念是通过少次CoT对多种不同的推理路径进行采样，并利用各代推理选择最一致的答案。这有助于提高 CoT 提示在涉及算术和常识推理任务中的性能。</td><td>Prompt: When I was 6 my sister was half my age. Now I’m 70 how old is my sister? Output: 35 答案错误</td></tr><tr><td><a href="https://www.promptingguide.ai/techniques/react" target="_blank" rel="noopener">ReAct (Reason + Act)</a></td><td>以交错的方式生成推理跟踪和特定任务的行动。生成推理轨迹允许模型诱导、跟踪和更新行动计划，甚至处理异常。行动步骤允许与外部来源（如知识库或环境）连接并收集信息，还能提高 LLM 的人工可解释性和可信度。总之，作者发现最好的方法是将 ReAct 与思维链（CoT）相结合，这样就能在推理过程中同时使用内部知识和外部信息。ReAct受到人类在学习新任务、做决策或推理时“表演”和“推理”之间的协同作用启发，它是一种将推理和行为结合起来的通用范式，通过激发语言模型生成口头推理过程和任务行为，实现动态推理以制定、维护和调整行动计划，并能够与外部环境（例如维基百科）进行交互，将额外信息纳入推理过程，从而解决<code>思维链（CoT）</code>提示的局限性，如缺乏对外部世界的访问或无法更新知识而导致的事实虚构和错误传播问题。</td><td><img src="https://www.promptingguide.ai/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Freact.8e7c93ae.png&amp;w=1920&amp;q=75" alt="react example"></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="TECH" scheme="http://liyuankun.top/categories/TECH/"/>
    
      <category term="AI" scheme="http://liyuankun.top/categories/TECH/AI/"/>
    
    
  </entry>
  
  <entry>
    <title>husky with sourcetree Cant find node in PATH, trying to find a node binary on your system</title>
    <link href="http://liyuankun.top/husky-with-sourcetree-Cant-find-node-in-PATH-trying-to-find-a-node-binary-on-your-system.html"/>
    <id>http://liyuankun.top/husky-with-sourcetree-Cant-find-node-in-PATH-trying-to-find-a-node-binary-on-your-system.html</id>
    <published>2023-11-08T10:46:18.000Z</published>
    <updated>2025-08-11T09:22:24.731Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>如果在 git GUI 软件, 例如sourcetree遇到 <code>pre-commit</code> / <code>pre-push</code> 报错找不到 yarn，可以参考这个 husky 的官方方案: <a href="https://github.com/typicode/husky/issues/390#issuecomment-1082345670" target="_blank" rel="noopener">https://github.com/typicode/husky/issues/390#issuecomment-1082345670</a></p><h2 id="solution">Solution</h2><ul><li>Create <code>~/.huskyrc</code> file in my home directory</li><li>With this content:<br>如果使用<code>nvm</code>来管理node版本：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Load Yarn command coming from homebrew</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"/opt/homebrew/bin/:<span class="variable">$PATH</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This loads nvm.sh and sets the correct PATH before running hook</span></span><br><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">"<span class="variable">$HOME</span>/.nvm"</span></span><br><span class="line">[ -s <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span> ] &amp;&amp; \. <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span></span><br><span class="line"></span><br><span class="line">nvm use default</span><br></pre></td></tr></table></figure><p>或者制定node版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">"/opt/homebrew/bin/: <span class="variable">$PATH</span>"</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"/opt/homebrew/opt/node@18/bin: <span class="variable">$PATH</span>"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="TECH" scheme="http://liyuankun.top/categories/TECH/"/>
    
      <category term="Tools" scheme="http://liyuankun.top/categories/TECH/Tools/"/>
    
      <category term="Environment setup" scheme="http://liyuankun.top/categories/TECH/Tools/Environment-setup/"/>
    
    
      <category term="git" scheme="http://liyuankun.top/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>hexo deploy error with wrong git user</title>
    <link href="http://liyuankun.top/hexo-deploy-error-with-wrong-git-user.html"/>
    <id>http://liyuankun.top/hexo-deploy-error-with-wrong-git-user.html</id>
    <published>2023-10-27T07:23:25.000Z</published>
    <updated>2025-08-11T09:22:24.731Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="error">error</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br><span class="line">(node:52405) ExperimentalWarning: The fs.promises API is experimental</span><br><span class="line">INFO  [hexo-math] Using engine <span class="string">'mathjax'</span></span><br><span class="line">INFO  DPlayer.min.css is not found <span class="keyword">in</span> this version of dplayer, skip it.</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">INFO  Copying files from extend <span class="built_in">dirs</span>...</span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">remote: Permission to yourGitUserName/yourGitUserName.github.io.git denied to anotherGitUserName.</span><br><span class="line">fatal: unable to access <span class="string">'https://github.com/yourGitUserName/yourGitUserName.github.io/'</span>: The requested URL returned error: 403</span><br><span class="line">FATAL Something<span class="string">'s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">Error: Spawn failed</span></span><br><span class="line"><span class="string">    at ChildProcess.task.on.code (/Users/yuanli/GitRepos/LYKGit/Blog/Hexo-theme-zilan/node_modules/hexo-deployer-git/node_modules/hexo-util/lib/spawn.js:51:21)</span></span><br><span class="line"><span class="string">    at ChildProcess.emit (events.js:189:13)</span></span><br><span class="line"><span class="string">    at Process.ChildProcess._handle.onexit (internal/child_process.js:248:12)</span></span><br></pre></td></tr></table></figure><p>这个报错<code>remote: Permission to yourGitUserName/yourGitUserName.github.io.git denied to anotherGitUserName.</code>表明使用错了这个repo的username，<code>anotherGitUserName</code>是我另一个repo的用户名，所以解决方法是设置对username。</p><h3 id="检查git-config-user-name">检查git config <a href="http://user.name" target="_blank" rel="noopener">user.name</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global --list</span><br><span class="line">git config --<span class="built_in">local</span> --list</span><br><span class="line">user.name=xxx</span><br></pre></td></tr></table></figure><p>如果不正确，设置正确</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"XXX</span></span><br><span class="line"><span class="string">git config --local user.name "</span>XXX</span><br></pre></td></tr></table></figure><p>发现还是不行，后来突然意识到这个设置的是hexo的这个repo使用的username, 而不是deploy到的那个repo的username</p><h3 id="改变deploy到repo的username">改变deploy到repo的username</h3><p>修改hexo repo里面的<code>_config.yml</code><br>Make sure your <code>_config.yml</code> file in your Hexo project contains the correct repository URL and branch information under the deploy section. For example:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/yourusername/yourusername.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">gh-pages</span></span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://yourusername@github.com/yourusername/yourusername.github.io.git</span> <span class="comment"># 指定user</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">gh-pages</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">$LYK_GIT_TOKEN</span></span><br></pre></td></tr></table></figure><p>如果使用git token, 可以在<a href="https://hexo.io/zh-cn/docs/one-command-deployment.html#google_vignette" target="_blank" rel="noopener"><code>_config.yml</code>指定token</a></p><blockquote><p>Token Authentication: If you are using a private repository or facing authentication issues, consider using a personal access token instead of your GitHub password. Generate a personal access token on GitHub and use it as the password when prompted. “令牌身份验证：如果您正在使用私有仓库或遇到身份验证问题，请考虑使用个人访问令牌代替您的 GitHub 密码。在 GitHub 上生成个人访问令牌，并在提示时将其用作密码。”</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="TECH" scheme="http://liyuankun.top/categories/TECH/"/>
    
      <category term="Hexo" scheme="http://liyuankun.top/categories/TECH/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://liyuankun.top/tags/Hexo/"/>
    
      <category term="Blog" scheme="http://liyuankun.top/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>Redux Toolkit createSlice怎么实现多个slice构成redux state tree</title>
    <link href="http://liyuankun.top/Redux-Toolkit-createSlice%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0%E5%A4%9A%E4%B8%AAslice%E6%9E%84%E6%88%90redux-state-tree.html"/>
    <id>http://liyuankun.top/Redux-Toolkit-createSlice怎么实现多个slice构成redux-state-tree.html</id>
    <published>2023-10-26T14:10:46.000Z</published>
    <updated>2025-08-11T09:22:24.729Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="redux-toolkit-createslice">Redux Toolkit - createSlice</h2><p><a href="https://redux-toolkit.js.org/usage/usage-with-typescript#createslice" target="_blank" rel="noopener">Redux Toolkit - createSlice 官方文档</a>这里虽然介绍了<code>createSlice</code>的使用方法，但是比较简单，如果我有一个比较复杂，层级比较多的redux store，不同层级都用<code>createSlice</code>来实现要怎么做呢？</p><p>例如 state tree 的结构：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">    config: &#123;</span><br><span class="line">        a : &#123;</span><br><span class="line">            a1: &#123;&#125;,</span><br><span class="line">            a2: &#123;&#125;,</span><br><span class="line">            a3: &#123;&#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        b: &#123;&#125;</span><br><span class="line">    &#125;，</span><br><span class="line">    content: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="selector成功-reducer失败">selector成功，reducer失败</h3><h4 id="createstore">createStore</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// createStore</span></span><br><span class="line"><span class="keyword">const</span> createStore = <span class="function">(<span class="params">extraArgument: ThunkArgument</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> store = configureStore(&#123;</span><br><span class="line">    reducer: &#123;</span><br><span class="line">      content: contentReducer,</span><br><span class="line">      config: aTop,  <span class="comment">// config state</span></span><br><span class="line">    &#125;,</span><br><span class="line">    middleware: <span class="function"><span class="params">getDefaultMiddleware</span> =&gt;</span></span><br><span class="line">      <span class="comment">// other code</span></span><br><span class="line">  &#125;)</span><br><span class="line">  setupListeners(store.dispatch)</span><br><span class="line">  <span class="keyword">return</span> store</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="a1-index-tsx"><code>./a1/index.tsx</code></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ./a1/index.tsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; createSlice, PayloadAction &#125; <span class="keyword">from</span> <span class="string">'@reduxjs/toolkit'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> interface A1 &#123;</span><br><span class="line">  enabled: boolean</span><br><span class="line">  a11: string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> initialState: A1 = &#123;</span><br><span class="line">  enabled: <span class="literal">false</span>,</span><br><span class="line">  a11: <span class="string">''</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> A1Slice = createSlice(&#123;</span><br><span class="line">  name: <span class="string">'a1Slice'</span>,</span><br><span class="line">  initialState,</span><br><span class="line">  reducers: &#123;</span><br><span class="line">    updateA1Enabled: <span class="function">(<span class="params">state, &#123; payload &#125;: PayloadAction&lt;boolean&gt;</span>) =&gt;</span> &#123;</span><br><span class="line">      state.enabled = payload</span><br><span class="line">    &#125;,</span><br><span class="line">    updateA11: <span class="function">(<span class="params">state, &#123; payload &#125;: PayloadAction&lt;string&gt;</span>) =&gt;</span> &#123;</span><br><span class="line">      state.a11 = payload</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123;</span><br><span class="line">  updateA1Enabled,</span><br><span class="line">  updateA11,</span><br><span class="line">&#125; = A1Slice.actions</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> A1Slice.reducer</span><br></pre></td></tr></table></figure><h4 id="configslice-tsx"><code>configSlice.tsx</code></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// configSlice.tsx</span></span><br><span class="line"><span class="keyword">import</span> type &#123; Reducer &#125; <span class="keyword">from</span> <span class="string">'redux'</span></span><br><span class="line"><span class="keyword">import</span> &#123; createSlice, PayloadAction, combineReducers &#125; <span class="keyword">from</span> <span class="string">'@reduxjs/toolkit'</span></span><br><span class="line"><span class="keyword">import</span> a1Reducer, <span class="keyword">from</span> <span class="string">'./a1'</span></span><br><span class="line"><span class="keyword">import</span> a2Reducer, <span class="keyword">from</span> <span class="string">'./a2'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> aReducer = combineReducers(&#123;</span><br><span class="line">  a1: a1Reducer,</span><br><span class="line">  a2: a2Reducer</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> type AState = ReturnType&lt;<span class="keyword">typeof</span> aReducer&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> interface A &#123;</span><br><span class="line">  a: AState</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> initialState: A = &#123;</span><br><span class="line">  a: aReducer(<span class="literal">undefined</span>, &#123; <span class="attr">type</span>: <span class="string">'INIT'</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> configSlice = createSlice(&#123;</span><br><span class="line">  name: <span class="string">'configSlice'</span>,</span><br><span class="line">  initialState,</span><br><span class="line">  reducers: &#123;</span><br><span class="line">    updateConfig: <span class="function">(<span class="params">state, action: PayloadAction&lt;Config&gt;</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> action.payload</span><br><span class="line">    &#125;,</span><br><span class="line">    updateA: <span class="function">(<span class="params">state, action: PayloadAction&lt;AState&gt;</span>) =&gt;</span> &#123;</span><br><span class="line">      state.a = action.payload</span><br><span class="line">    &#125;,</span><br><span class="line">    updatePartialA: <span class="function">(<span class="params">state, action: PayloadAction&lt;Partial&lt;ReturnType&lt;<span class="keyword">typeof</span> aReducer&gt;&gt;&gt;</span>) =&gt;</span> &#123;</span><br><span class="line">      state.a = &#123; ...state.a, ...action.payload &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123; updateConfig, updateA, updatePartialA &#125; = configSlice.actions</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> configSlice.reducer</span><br></pre></td></tr></table></figure><h3 id="成功实现-selector成功-reducer成功">成功实现(selector成功，reducer成功)</h3><h4 id="reduce-reducers"><code>./reduce-reducers</code></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ./reduce-reducers</span></span><br><span class="line">type Action = &#123;</span><br><span class="line">  type: string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">type Reducer&lt;S&gt; = <span class="function">(<span class="params">state: S, action: Action</span>) =&gt;</span> S</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> (...args: Reducer&lt;unknown&gt;[]): Reducer&lt;unknown&gt; =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> initialState = <span class="keyword">typeof</span> args[<span class="number">0</span>] !== <span class="string">'function'</span> &amp;&amp; args.shift()</span><br><span class="line">  <span class="keyword">const</span> reducers = args</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> initialState === <span class="string">'undefined'</span>) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(</span><br><span class="line">      <span class="string">'The initial state may not be undefined. If you do not want to set a value for this reducer, you can use null instead of undefined.'</span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">prevState, value, ...args</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> prevStateIsUndefined = <span class="keyword">typeof</span> prevState === <span class="string">'undefined'</span></span><br><span class="line">    <span class="keyword">const</span> valueIsUndefined = <span class="keyword">typeof</span> value === <span class="string">'undefined'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (prevStateIsUndefined &amp;&amp; valueIsUndefined &amp;&amp; initialState) &#123;</span><br><span class="line">      <span class="keyword">return</span> initialState</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> reducers.reduce(</span><br><span class="line">      (newState, reducer, index) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> reducer === <span class="string">'undefined'</span>) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">`An undefined reducer was passed in at index <span class="subst">$&#123;index&#125;</span>`</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> reducer(newState, value, ...args)</span><br><span class="line">      &#125;,</span><br><span class="line">      prevStateIsUndefined &amp;&amp; !valueIsUndefined &amp;&amp; initialState ? initialState : prevState</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="combinslices"><code>./combinSlices</code></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ./combinSlices</span></span><br><span class="line"><span class="keyword">import</span> &#123; combineReducers &#125; <span class="keyword">from</span> <span class="string">'@reduxjs/toolkit'</span></span><br><span class="line"><span class="keyword">import</span> type &#123; Reducer &#125; <span class="keyword">from</span> <span class="string">'redux'</span></span><br><span class="line"><span class="keyword">import</span> reduceReducers <span class="keyword">from</span> <span class="string">'./reduce-reducers'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> combineSlices = (sliceReducer: Reducer, <span class="attr">sliceInitialState</span>: object, <span class="attr">childSliceReducers</span>: unknown): <span class="function"><span class="params">Reducer</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> noopReducersFromInitialState: unknown = <span class="built_in">Object</span>.keys(sliceInitialState).reduce(<span class="function">(<span class="params">prev, curr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      ...prev,</span><br><span class="line">      [curr]: <span class="function">(<span class="params">s = <span class="literal">null</span></span>) =&gt;</span> s</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, &#123;&#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> childReducers = combineReducers(&#123;</span><br><span class="line">    ...(childSliceReducers <span class="keyword">as</span> object),</span><br><span class="line">    ...(noopReducersFromInitialState <span class="keyword">as</span> object)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> reduceReducers(sliceReducer, childReducers <span class="keyword">as</span> Reducer&lt;unknown&gt;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> combineSlices</span><br></pre></td></tr></table></figure><h4 id="configslice-tsx-version-2"><code>configSlice.tsx</code> version 2</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// configSlice.tsx</span></span><br><span class="line"><span class="keyword">import</span> type &#123; Reducer &#125; <span class="keyword">from</span> <span class="string">'redux'</span></span><br><span class="line"><span class="keyword">import</span> &#123; createSlice, PayloadAction, combineReducers &#125; <span class="keyword">from</span> <span class="string">'@reduxjs/toolkit'</span></span><br><span class="line"><span class="keyword">import</span> a1Reducer, <span class="keyword">from</span> <span class="string">'./a1'</span></span><br><span class="line"><span class="keyword">import</span> a2Reducer, <span class="keyword">from</span> <span class="string">'./a2'</span></span><br><span class="line"><span class="keyword">import</span> combineSlices <span class="keyword">from</span> <span class="string">'./combinSlices'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> aReducer = combineReducers(&#123;</span><br><span class="line">  a1: a1Reducer,</span><br><span class="line">  a2: a2Reducer</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> type AState = ReturnType&lt;<span class="keyword">typeof</span> aReducer&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> interface A &#123;</span><br><span class="line">  a: AState</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> initialState: A = &#123;</span><br><span class="line">  a: aReducer(<span class="literal">undefined</span>, &#123; <span class="attr">type</span>: <span class="string">'INIT'</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// -----------------New added part 1-------------</span></span><br><span class="line"><span class="keyword">const</span> aSlice = createSlice(&#123;</span><br><span class="line">  name: <span class="string">'aSlice'</span>,</span><br><span class="line">  initialState,</span><br><span class="line">  reducers: &#123;&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// -----------------New added part 1-------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> configSlice = createSlice(&#123;</span><br><span class="line">  name: <span class="string">'configSlice'</span>,</span><br><span class="line">  initialState,</span><br><span class="line">  reducers: &#123;</span><br><span class="line">    updateConfig: <span class="function">(<span class="params">state, action: PayloadAction&lt;Config&gt;</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> action.payload</span><br><span class="line">    &#125;,</span><br><span class="line">    updateA: <span class="function">(<span class="params">state, action: PayloadAction&lt;AState&gt;</span>) =&gt;</span> &#123;</span><br><span class="line">      state.a = action.payload</span><br><span class="line">    &#125;,</span><br><span class="line">    updatePartialA: <span class="function">(<span class="params">state, action: PayloadAction&lt;Partial&lt;ReturnType&lt;<span class="keyword">typeof</span> aReducer&gt;&gt;&gt;</span>) =&gt;</span> &#123;</span><br><span class="line">      state.a = &#123; ...state.a, ...action.payload &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123; updateConfig, updateA, updatePartialA &#125; = configSlice.actions</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> configSlice.reducer</span><br><span class="line"></span><br><span class="line"><span class="comment">// -----------------New added part 2-------------</span></span><br><span class="line"><span class="keyword">const</span> aCombine = combineSlices(</span><br><span class="line">  aSlice.reducer,</span><br><span class="line">  &#123;&#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    a1: a1Reducer,</span><br><span class="line">    a2: a2Reducer</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"><span class="keyword">const</span> aTop: Reducer&lt;Config&gt; = combineSlices(</span><br><span class="line">  configSlice.reducer,</span><br><span class="line">  &#123;&#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    a: aCombine</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"><span class="keyword">export</span> &#123; aCombine, aTop &#125;</span><br><span class="line"><span class="comment">// -----------------New added part 2-------------</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="TECH" scheme="http://liyuankun.top/categories/TECH/"/>
    
      <category term="FrontEnd" scheme="http://liyuankun.top/categories/TECH/FrontEnd/"/>
    
      <category term="Redux" scheme="http://liyuankun.top/categories/TECH/FrontEnd/Redux/"/>
    
    
      <category term="Redux Toolkit" scheme="http://liyuankun.top/tags/Redux-Toolkit/"/>
    
  </entry>
  
  <entry>
    <title>你不知道的Redux</title>
    <link href="http://liyuankun.top/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84Redux.html"/>
    <id>http://liyuankun.top/你不知道的Redux.html</id>
    <published>2023-10-12T13:57:17.000Z</published>
    <updated>2025-08-11T09:22:24.732Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="redux-toolkit">Redux Toolkit</h2><ul><li><a href="https://juejin.cn/post/7239187734417244216" target="_blank" rel="noopener">Redux Toolkit 可能是目前 Redux 的最佳实践</a></li><li><a href="https://juejin.cn/post/7239633419785027639" target="_blank" rel="noopener">Redux toolkit 如何优雅的实现范式化</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="TECH" scheme="http://liyuankun.top/categories/TECH/"/>
    
      <category term="FrontEnd" scheme="http://liyuankun.top/categories/TECH/FrontEnd/"/>
    
      <category term="Redux" scheme="http://liyuankun.top/categories/TECH/FrontEnd/Redux/"/>
    
    
  </entry>
  
  <entry>
    <title>React Folder Structure</title>
    <link href="http://liyuankun.top/React-Folder-Structure.html"/>
    <id>http://liyuankun.top/React-Folder-Structure.html</id>
    <published>2023-10-11T02:46:45.000Z</published>
    <updated>2025-08-11T09:22:24.729Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="reference-links">Reference Links</h2><p><a href="https://www.robinwieruch.de/react-folder-structure/" target="_blank" rel="noopener">React Folder Structure in 5 Steps [2022]</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="TECH" scheme="http://liyuankun.top/categories/TECH/"/>
    
      <category term="FrontEnd" scheme="http://liyuankun.top/categories/TECH/FrontEnd/"/>
    
      <category term="React" scheme="http://liyuankun.top/categories/TECH/FrontEnd/React/"/>
    
    
  </entry>
  
  <entry>
    <title>解决 No matching host key type found. Their offer ssh-rsa</title>
    <link href="http://liyuankun.top/%E8%A7%A3%E5%86%B3-No-matching-host-key-type-found-Their-offer-ssh-rsa.html"/>
    <id>http://liyuankun.top/解决-No-matching-host-key-type-found-Their-offer-ssh-rsa.html</id>
    <published>2023-10-03T12:28:12.000Z</published>
    <updated>2025-08-11T09:22:24.734Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="no-matching-host-key-type-found-their-offer-ssh-rsa问题处理-知乎">No matching host key type found. Their offer: ssh-rsa问题处理 - 知乎</h1><p><a href="https://zhuanlan.zhihu.com/p/616716090" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/616716090</a></p><h2 id="mac-上iterm2-脚本连接堡垒机报错">Mac 上iterm2 脚本连接堡垒机报错</h2><p><img src="https://pic2.zhimg.com/80/v2-93fa626b6fa7f63932f9ab61102856ad_1440w.webp" alt="Mac 上iterm2 脚本连接堡垒机报错"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(base)x xxx@xxxMacBook-ProD &gt; /usr/<span class="built_in">local</span>/bin &gt; expect /usr/<span class="built_in">local</span>/bin/login/login-jumper.exp</span><br><span class="line">spawn ssh -p 2xxxxxx</span><br><span class="line">Unable to negotiate with 106.75.36.157 port 22222: no matching host key <span class="built_in">type</span> found. Their offer: ssh-rsa spawn_id: spawn id exp6 not open</span><br><span class="line">    <span class="keyword">while</span> executing</span><br><span class="line"><span class="string">"interact"</span></span><br><span class="line">    (file <span class="string">"/usr/local/bin/login/login-jumper.exp"</span> line 29)</span><br></pre></td></tr></table></figure><h2 id="原因">原因</h2><p>openssh觉得ssh-rsa加密方式不安全, 直接从8.8开始默认不允许这种密钥用于登陆了</p><h2 id="解决方案">解决方案</h2><h3 id="方案1-临时性方案-命令行增加参数-ohostkeyalgorithms-ssh-rsa">方案1: 临时性方案（命令行增加参数 <code>-oHostKeyAlgorithms=+ssh-rsa</code>）</h3><p><img src="https://pic2.zhimg.com/80/v2-dd2b52f6308497be0c2ff14ae194d225_1440w.webp" alt="命令行增加参数 "></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -oHostkeyALgorithms=+ssh-rsa -p 22222 -l</span><br><span class="line">The authenticity of host <span class="string">'[baolei.zen-game.com]:22222 ([106.75.36.157]:22222)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is SHA256:2wywU82+91MJq5vxjwWWOIpTNdVal2GYAOi35/FWm4.</span></span><br><span class="line"><span class="string">This host key is known by the following other names/addresses:</span></span><br><span class="line"><span class="string">    ~/.ssh/known_hosts:16: [zengame.uhasadmin.com]: 22222</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added "[baolei.zen-game.com]:22222 (RSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Password authentication (mars.cai@baolei.zen-game.com) Password:</span></span><br><span class="line"><span class="string">Welcome to SSHD</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">请选择多因子认证方式：</span></span><br><span class="line"><span class="string">[1] 短信验证码</span></span><br><span class="line"><span class="string">[2] 手机令牌OTP</span></span><br><span class="line"><span class="string">[x] English</span></span><br><span class="line"><span class="string">[e] 退出</span></span><br></pre></td></tr></table></figure><p>连接成功</p><h3 id="方案2-持久化方案-配置文件持久化">方案2:持久化方案（配置文件持久化）</h3><p>输入<code>sudo nano ~/.ssh/config</code>，然后在出现提示时，输入您的管理密码</p><p><img src="https://pic1.zhimg.com/80/v2-9f68694841e5892aae8a4c58811ae4cc_1440w.webp" alt="输入您的管理密码"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Host baolie .xxxxxx</span><br><span class="line">HostKeyAlgorithms +ssh-rsa</span><br></pre></td></tr></table></figure><p>输入上面内容，将需要连接的服务器IP加入到host，可以用 * 对所有主机生效</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Host</span> *</span><br><span class="line"></span><br><span class="line">PubkeyAcceptedKeyTypes +ssh-rsa</span><br><span class="line"></span><br><span class="line">HostKeyAlgorithms +ssh-rsa</span><br></pre></td></tr></table></figure><p>第一行说明对所有主机生效, 第二行是将ssh-rsa加会允许使用的范围, 第三行是指定所有主机使用的都是ssh-rsa算法的key</p><p>连接测试成功，可以像往常一样通过SSH连接到服务器。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Chrome116 chromedriver 下载及配置 </title>
    <link href="http://liyuankun.top/Chrome116-chromedriver-%E4%B8%8B%E8%BD%BD%E5%8F%8A%E9%85%8D%E7%BD%AE.html"/>
    <id>http://liyuankun.top/Chrome116-chromedriver-下载及配置.html</id>
    <published>2023-09-04T06:41:49.000Z</published>
    <updated>2025-08-11T09:22:24.704Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="chromedriver-116-版本下载">chromedriver 116 版本下载</h2><ul><li>老版本下载（&lt;=114）： <a href="https://chromedriver.chromium.org/downloads" target="_blank" rel="noopener">https://chromedriver.chromium.org/downloads</a></li><li>新版本下载: <a href="https://googlechromelabs.github.io/chrome-for-testing/" target="_blank" rel="noopener">https://googlechromelabs.github.io/chrome-for-testing/</a><ul><li>具体步骤可参考文章： <a href="https://www.cnblogs.com/wuxianfeng023/p/17650789.html" target="_blank" rel="noopener">Chrome116驱动下载路径 解决版本不匹配问题</a></li></ul></li></ul><p>新版本下载后是<code>Google Chrome for Testing.app</code>， 官网介绍<a href="https://developer.chrome.com/blog/chrome-for-testing/" target="_blank" rel="noopener">Chrome for Testing: reliable downloads for browser automation</a></p><h2 id="chromedriver-环境变量配置">chromedriver 环境变量配置</h2><p>我下载的版本是： <a href="https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/116.0.5845.96/mac-arm64/chrome-mac-arm64.zip" target="_blank" rel="noopener">116 mac-arm64</a></p><ul><li>下载后<code>chrome-mac-arm64.zip</code>解压为：<code>/chrome-mac-arm64/Google Chrome for Testing.app</code></li><li>在<code>/usr/local</code>下新建文件夹<code>chromedriver</code></li><li>移动文件<code>Google Chrome for Testing.app</code>到<code>/usr/local/chromedriver</code></li><li>懒得空格转义，就把<code>Google Chrome for Testing.app</code>改名为<code>chromedriver.app</code>， 所以得到<code>/usr/local/chromedriver/chromedriver.app</code><ul><li><code>/usr/local/chromedriver/chromedriver.app/Contents/MacOS/Google Chrome for Testing.app</code>也改名为<br><code>chromedriver.app</code>， ， 所以得到<code>/usr/local/chromedriver/chromedriver.app/Contents/MacOS/chromedriver</code></li></ul></li></ul><!-- - 在`~/.bash_profile` 配置了`export PATH="$PATH:/usr/local/chromedriver"`， 并且`source ~/.bash_profile`。 -->  <!-- - 在命令行输入 chromedriver不管用 --><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定Chromedriver的路径</span></span><br><span class="line">driver_path = <span class="string">'/usr/local/chromedriver/chromedriver.app/Contents/MacOS/chromedriver'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个Chrome WebDriver实例</span></span><br><span class="line">driver = webdriver.Chrome(executable_path=driver_path)</span><br><span class="line"></span><br><span class="line">url = <span class="string">'https://www.baidu.com'</span></span><br><span class="line">driver.get(url)</span><br></pre></td></tr></table></figure><p>这时候执行，chromedriver可以启动chrome窗口，但是无法打开页面’<a href="https://www.baidu.com" target="_blank" rel="noopener">https://www.baidu.com</a>’, 然后报错：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    driver = webdriver.Chrome(<span class="attribute">executable_path</span>=driver_path)</span><br><span class="line">             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><br><span class="line">  File <span class="string">"~/anaconda3/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py"</span>, line 73, <span class="keyword">in</span> __init__</span><br><span class="line">    self.service.start()</span><br><span class="line">  File <span class="string">"~/anaconda3/lib/python3.11/site-packages/selenium/webdriver/common/service.py"</span>, line 104, <span class="keyword">in</span> start</span><br><span class="line">    raise WebDriverException(<span class="string">"Can not connect to the Service %s"</span> % self.path)</span><br><span class="line">selenium.common.exceptions.WebDriverException: Message: Can <span class="keyword">not</span> connect <span class="keyword">to</span> the<span class="built_in"> Service </span>/usr/local/chromedriver/chromedriver.app/Contents/MacOS/chromedriver</span><br></pre></td></tr></table></figure><h2 id="踩坑">踩坑</h2><h3 id="google-chrome-for-testing-app-is-damaged-and-can-t-be-opened-you-should-move-it-to-the-trash">“Google Chrome for Testing.app” is damaged and can’t be opened. You should move it to the Trash.&quot;</h3><p>提示程序含有恶意代码或者已经打开所有来源还是提示扔到垃圾桶</p><p>Google Chrome for Testing.app官方解决方法： <a href="https://github.com/GoogleChromeLabs/chrome-for-testing#macos-says-the-app-is-damaged-what-now" target="_blank" rel="noopener">https://github.com/GoogleChromeLabs/chrome-for-testing#macos-says-the-app-is-damaged-what-now</a></p><p>在终端输入 <code>sudo xattr -cr 'Google Chrome for Testing.app'</code></p><h2 id="webdrivermanager-setup-failing-to-download-chromedriver-116"><a href="https://stackoverflow.com/questions/76932496/webdrivermanager-setup-failing-to-download-chromedriver-116" target="_blank" rel="noopener">WebDriverManager setup failing to download chromedriver 116</a></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>IOS日历同步到提醒事项-自动脚本</title>
    <link href="http://liyuankun.top/IOS%E6%97%A5%E5%8E%86%E5%90%8C%E6%AD%A5%E5%88%B0%E6%8F%90%E9%86%92%E4%BA%8B%E9%A1%B9-%E8%87%AA%E5%8A%A8%E8%84%9A%E6%9C%AC.html"/>
    <id>http://liyuankun.top/IOS日历同步到提醒事项-自动脚本.html</id>
    <published>2023-08-30T09:54:59.000Z</published>
    <updated>2025-08-11T09:22:24.719Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>根据知乎上的文章修改为自己的需求， 2023年最新的IOS16.6是正常执行的。</p><h2 id="知乎上的文章">知乎上的文章</h2><h3 id="ios-日历同步-提醒事项-单向同步-打卡功能-作者：汀力"><a href="https://zhuanlan.zhihu.com/p/169566930" target="_blank" rel="noopener">【ios】日历同步—》提醒事项 单向同步+打卡功能 【作者：汀力】</a></h3><details>  <summary>点击展开代码1</summary>  <p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="keyword">var</span> dur_month = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> startDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">startDate.setMonth(startDate.getMonth() - dur_month);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`日历的开始时间 <span class="subst">$&#123;startDate.toLocaleDateString()&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> endDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">endDate.setMonth(endDate.getMonth() + dur_month);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`日历的结束时间 <span class="subst">$&#123;endDate.toLocaleDateString()&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> reminders = <span class="keyword">await</span> Reminder.allDueBetween(startDate, endDate);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`获取 <span class="subst">$&#123;reminders.length&#125;</span> 条提醒事项`</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> calendar = <span class="keyword">await</span> Calendar.forEvents();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取日历名和对应的日历</span></span><br><span class="line"><span class="keyword">var</span> m_dict = &#123;&#125;;</span><br><span class="line"><span class="keyword">for</span> (cal <span class="keyword">of</span> calendar) &#123;</span><br><span class="line">  m_dict[cal.title] = cal;</span><br><span class="line">  <span class="comment">// console.log(`日历:$&#123;cal.title&#125;`)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> events = <span class="keyword">await</span> CalendarEvent.between(startDate, endDate, calendar);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`获取 <span class="subst">$&#123;events.length&#125;</span> 条日历`</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reminders_id_set = <span class="keyword">new</span> <span class="built_in">Set</span>(reminders.map(<span class="function">(<span class="params">e</span>) =&gt;</span> e.identifier));</span><br><span class="line"><span class="comment">// 删除日历里提醒事项删除的事项</span></span><br><span class="line">events_created = events.filter(</span><br><span class="line">  (e) =&gt; e.notes != <span class="literal">null</span> &amp;&amp; e.notes.includes(<span class="string">"[Reminder]"</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> event <span class="keyword">of</span> events_created) &#123;</span><br><span class="line">  <span class="comment">// console.warn(event.notes)</span></span><br><span class="line">  <span class="keyword">let</span> reg = <span class="regexp">/(\[Reminder\])\s([A-Z0-9\-]*)/</span>;</span><br><span class="line">  <span class="keyword">let</span> r = event.notes.match(reg);</span><br><span class="line">  <span class="comment">// if(r) console.log(r[2])</span></span><br><span class="line">  <span class="keyword">if</span> (!reminders_id_set.has(r[<span class="number">2</span>])) &#123;</span><br><span class="line">    event.remove();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> reminder <span class="keyword">of</span> reminders) &#123;</span><br><span class="line">  <span class="comment">// reminder的标识符</span></span><br><span class="line">  <span class="keyword">const</span> targetNote = <span class="string">`[Reminder] <span class="subst">$&#123;reminder.identifier&#125;</span>`</span>;</span><br><span class="line">  <span class="keyword">const</span> [targetEvent] = events.filter(</span><br><span class="line">    (e) =&gt; e.notes != <span class="literal">null</span> &amp;&amp; e.notes.includes(targetNote)</span><br><span class="line">  ); <span class="comment">// 过滤重复的reminder</span></span><br><span class="line">  <span class="keyword">if</span> (!m_dict[reminder.calendar.title]) &#123;</span><br><span class="line">    <span class="built_in">console</span>.warn(<span class="string">"找不到日历"</span> + reminder.calendar.title);</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (targetEvent) &#123;</span><br><span class="line">    <span class="comment">// console.log(`找到已经创建的事项 $&#123;reminder.title&#125;`)</span></span><br><span class="line">    updateEvent(targetEvent, reminder);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.warn(<span class="string">`创建事项 <span class="subst">$&#123;reminder.title&#125;</span> 到 <span class="subst">$&#123;reminder.calendar.title&#125;</span>`</span>);</span><br><span class="line">    <span class="keyword">const</span> newEvent = <span class="keyword">new</span> CalendarEvent();</span><br><span class="line">    newEvent.notes = targetNote + <span class="string">"\n"</span> + reminder.notes; <span class="comment">// 要加入备注</span></span><br><span class="line">    updateEvent(newEvent, reminder);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Script.complete();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateEvent</span>(<span class="params">event, reminder</span>) </span>&#123;</span><br><span class="line">  event.title = <span class="string">`<span class="subst">$&#123;reminder.title&#125;</span>`</span>;</span><br><span class="line">  cal_name = reminder.calendar.title;</span><br><span class="line">  cal = m_dict[cal_name];</span><br><span class="line">  event.calendar = cal;</span><br><span class="line">  <span class="comment">// console.warn(event.calendar.title)</span></span><br><span class="line">  <span class="comment">// 已完成事项</span></span><br><span class="line">  <span class="keyword">if</span> (reminder.isCompleted) &#123;</span><br><span class="line">    event.title = <span class="string">`✅<span class="subst">$&#123;reminder.title&#125;</span>`</span>;</span><br><span class="line">    <span class="comment">//    event.isAllDay = false</span></span><br><span class="line">    <span class="comment">//     event.startDate = reminder.dueDate</span></span><br><span class="line">    <span class="comment">//   event.endDate=reminder.dueDate</span></span><br><span class="line">    <span class="comment">//    var ending = new Date(reminder.completionDate)</span></span><br><span class="line">    <span class="comment">//    ending.setHours(ending.getHours()+1)</span></span><br><span class="line">    <span class="comment">//    event.endDate = ending</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> period =</span><br><span class="line">      (reminder.dueDate - reminder.completionDate) / <span class="number">1000</span> / <span class="number">3600</span> / <span class="number">24</span>;</span><br><span class="line">    period = period.toFixed(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (period &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      period = -period;</span><br><span class="line">      event.location = <span class="string">" 延期"</span> + period + <span class="string">"天完成"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (period == <span class="number">0</span>) &#123;</span><br><span class="line">      event.location = <span class="string">" 准时完成"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      event.location = <span class="string">" 提前"</span> + period + <span class="string">"天完成"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 未完成事项</span></span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> nowtime = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="keyword">var</span> period = (reminder.dueDate - nowtime) / <span class="number">1000</span> / <span class="number">3600</span> / <span class="number">24</span>;</span><br><span class="line">    period = period.toFixed(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// console.log(reminder.title+(period))</span></span><br><span class="line">    <span class="keyword">if</span> (period &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">// 待办顺延</span></span><br><span class="line"></span><br><span class="line">      event.location = <span class="string">" 延期"</span> + -period + <span class="string">"天"</span>;</span><br><span class="line">      <span class="comment">// 如果不是在同一天,设置为全天事项</span></span><br><span class="line">      <span class="keyword">if</span> (reminder.dueDate.getDate() != nowtime.getDate()) &#123;</span><br><span class="line">        event.title = <span class="string">`❌<span class="subst">$&#123;reminder.title&#125;</span>`</span>;</span><br><span class="line">        event.startDate = nowtime;</span><br><span class="line">        event.endDate = nowtime;</span><br><span class="line">        event.isAllDay = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 在同一天的保持原来的时间</span></span><br><span class="line">      <span class="keyword">else</span> &#123;</span><br><span class="line">        event.title = <span class="string">`⭕️<span class="subst">$&#123;reminder.title&#125;</span>`</span>;</span><br><span class="line">        event.isAllDay = <span class="literal">false</span>;</span><br><span class="line">        event.startDate = reminder.dueDate;</span><br><span class="line">        <span class="keyword">var</span> ending = <span class="keyword">new</span> <span class="built_in">Date</span>(reminder.dueDate);</span><br><span class="line">        ending.setHours(ending.getHours() + <span class="number">1</span>);</span><br><span class="line">        event.endDate = ending;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">`【<span class="subst">$&#123;reminder.title&#125;</span>】待办顺延<span class="subst">$&#123;-period&#125;</span>天`</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      event.title = <span class="string">`⭕️<span class="subst">$&#123;reminder.title&#125;</span>`</span>;</span><br><span class="line">      event.isAllDay = <span class="literal">false</span>;</span><br><span class="line">      event.location = <span class="string">"还剩"</span> + period + <span class="string">"天"</span>;</span><br><span class="line">      event.startDate = reminder.dueDate;</span><br><span class="line">      <span class="keyword">var</span> ending = <span class="keyword">new</span> <span class="built_in">Date</span>(reminder.dueDate);</span><br><span class="line">      ending.setHours(ending.getHours() + <span class="number">1</span>);</span><br><span class="line">      event.endDate = ending;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!reminder.dueDateIncludesTime) event.isAllDay = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  event.save();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>  </p></details><h3 id="最完美-ios-提醒事项与日历-双向同步-带跳转-作者：你说-根据汀力"><a href="https://zhuanlan.zhihu.com/p/558267163" target="_blank" rel="noopener">最完美(ios)提醒事项与日历  双向同步+带跳转  【作者：你说】（根据汀力）</a></h3><details>  <summary>点击展开代码2</summary>  <p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="keyword">var</span> dur_month = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> startDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">startDate.setMonth(startDate.getMonth() - dur_month);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`日历的开始时间 <span class="subst">$&#123;startDate.toLocaleDateString()&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> endDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">endDate.setMonth(endDate.getMonth() + dur_month);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`日历的结束时间 <span class="subst">$&#123;endDate.toLocaleDateString()&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">event_cals = <span class="keyword">await</span> Calendar.forEvents();</span><br><span class="line">reminder_cals = <span class="keyword">await</span> Calendar.forReminders();</span><br><span class="line">titles = reminder_cals.map(<span class="function"><span class="params">e</span> =&gt;</span> e.title).filter(<span class="function"><span class="params">v</span> =&gt;</span> event_cals.map(<span class="function"><span class="params">e</span> =&gt;</span> e.title).includes(v));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`日历列表:<span class="subst">$&#123;titles&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">event_cals = event_cals.filter(<span class="function"><span class="params">v</span> =&gt;</span> titles.includes(v.title));</span><br><span class="line">reminder_cals = reminder_cals.filter(<span class="function"><span class="params">v</span> =&gt;</span> titles.includes(v.title));</span><br><span class="line"></span><br><span class="line">reminder_map = &#123;&#125;;</span><br><span class="line">reminder_cals.forEach(<span class="function"><span class="params">r</span> =&gt;</span> (reminder_map[r.title] = r));</span><br><span class="line"><span class="comment">// 时间范围过滤</span></span><br><span class="line"><span class="keyword">const</span> events = <span class="keyword">await</span> CalendarEvent.between(startDate, endDate, event_cals);</span><br><span class="line"><span class="keyword">const</span> reminders = <span class="keyword">await</span> Reminder.allDueBetween(startDate, endDate, reminder_cals);</span><br><span class="line"></span><br><span class="line"><span class="comment">//找出没有创建对应reminder的event，创建reminder</span></span><br><span class="line">reminder_created = reminders.filter(<span class="function"><span class="params">e</span> =&gt;</span> e.priority == <span class="number">1</span>);</span><br><span class="line">reminder_id_set = <span class="keyword">new</span> <span class="built_in">Set</span>(reminder_created.map(<span class="function"><span class="params">e</span> =&gt;</span> e.identifier));</span><br><span class="line"></span><br><span class="line">reg = <span class="regexp">/(\\[id\\])x\\-apple\\-reminderkit\\:\\\/\\\/REMCDReminder\\\/([A-Z0-9\\-\\:\/=]*)$/</span>;</span><br><span class="line"><span class="comment">// 提醒和日历 备注都要以[id]xxxxxx结尾</span></span><br><span class="line">events.forEach(<span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (e.notes != <span class="literal">null</span>) &#123;</span><br><span class="line">    s = e.notes.match(reg);</span><br><span class="line">    <span class="keyword">if</span> (s != <span class="literal">null</span>) &#123;</span><br><span class="line">      r_id = s[<span class="number">2</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      r_id = <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    r_id = <span class="string">''</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//console.log(e.title)</span></span><br><span class="line">  <span class="keyword">if</span> (e.title.startsWith(<span class="string">"✅"</span>)) &#123;</span><br><span class="line">    event_ok = <span class="literal">true</span>;</span><br><span class="line">    pure_title = e.title.substr(<span class="number">1</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.title.startsWith(<span class="string">"☑️"</span>)) &#123;</span><br><span class="line">    event_ok = <span class="literal">false</span>;</span><br><span class="line">    pure_title = e.title.substr(<span class="number">1</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    event_ok = <span class="literal">false</span>;</span><br><span class="line">    pure_title = e.title;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//console.log(''+event_ok)</span></span><br><span class="line">  <span class="keyword">var</span> r = <span class="literal">undefined</span>;</span><br><span class="line">  <span class="keyword">if</span> (!reminder_id_set.has(r_id)) &#123;</span><br><span class="line">    <span class="comment">// 新创建状态来自日历标题</span></span><br><span class="line">    remind_ok = event_ok;</span><br><span class="line">    newReminder = <span class="keyword">new</span> Reminder();</span><br><span class="line">    newReminder.dueDate = e.startDate;</span><br><span class="line">    newReminder.calendar = reminder_map[e.calendar.title];</span><br><span class="line">    newReminder.dueDateIncludesTime = !e.isAllDay;</span><br><span class="line">    newReminder.title = pure_title;</span><br><span class="line">    newReminder.priority = <span class="number">1</span>;</span><br><span class="line">    newReminder.isCompleted = remind_ok;</span><br><span class="line">    newReminder.save();</span><br><span class="line">    targetNote = <span class="string">`[id]x-apple-reminderkit:\/\/REMCDReminder\/<span class="subst">$&#123;newReminder.identifier&#125;</span>`</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`创建提醒:<span class="subst">$&#123;pure_title&#125;</span>`</span>);</span><br><span class="line">    r = newReminder;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> [targetReminder] = reminder_created.filter(<span class="function"><span class="params">e</span> =&gt;</span> e.identifier == r_id);</span><br><span class="line">    <span class="keyword">if</span> (targetReminder.isCompleted) &#123;</span><br><span class="line">      remind_ok = <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      remind_ok = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 标题参考日历的，状态参数提醒的</span></span><br><span class="line">    targetReminder.title = pure_title;</span><br><span class="line">    targetReminder.dueDate = e.startDate;</span><br><span class="line">    targetReminder.dueDateIncludesTime = !e.isAllDay;</span><br><span class="line">    targetReminder.save();</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`更新提醒:<span class="subst">$&#123;pure_title&#125;</span>`</span>);</span><br><span class="line">    <span class="comment">// 清理已经更新过的，用于后面删除日历上删除的</span></span><br><span class="line">    targetNote = <span class="string">`[id]x-apple-reminderkit:\/\/REMCDReminder\/<span class="subst">$&#123;targetReminder.identifier&#125;</span>`</span>;</span><br><span class="line">    reminder_id_set.delete(r_id);</span><br><span class="line">    r = targetReminder;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (remind_ok) &#123;</span><br><span class="line">    e.title = <span class="string">"✅"</span> + pure_title;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    e.title = <span class="string">"☑️"</span> + pure_title;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//console.log(pure_title)</span></span><br><span class="line">  <span class="keyword">if</span> (e.notes == <span class="literal">null</span>) &#123;</span><br><span class="line">    e.notes = <span class="string">"\\r\\n\\r\\n"</span> + targetNote;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!e.notes.endsWith(targetNote)) &#123;</span><br><span class="line">    e.notes = e.notes + <span class="string">"\\r\\n\\r\\n"</span> + targetNote;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 如果不要打卡时间，注释掉</span></span><br><span class="line">  updateEvent(e, r);</span><br><span class="line">  e.save();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//reminder_id_set.forEach(v =&gt; &#123;</span></span><br><span class="line"><span class="comment">//  console.log(`reminder:$&#123;v&#125;`)</span></span><br><span class="line"><span class="comment">//&#125;)</span></span><br><span class="line"></span><br><span class="line">reminder_id_set.forEach(<span class="function"><span class="params">id</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> [targetReminder] = reminder_created.filter(<span class="function"><span class="params">e</span> =&gt;</span> e.identifier == id);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`删除提醒:<span class="subst">$&#123;targetReminder.title&#125;</span>`</span>);</span><br><span class="line">  targetReminder.remove();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateEvent</span>(<span class="params">event, reminder</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 用户自定义的保持原样</span></span><br><span class="line">  <span class="keyword">if</span> (event.location != <span class="literal">null</span> &amp;&amp; !event.location.startsWith(<span class="string">"⏱"</span>)) &#123;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//已完成事项</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (reminder.isCompleted) &#123;</span><br><span class="line">    <span class="keyword">var</span> period = (reminder.dueDate - reminder.completionDate) / <span class="number">1000</span> / <span class="number">3600</span> / <span class="number">24</span>;</span><br><span class="line">    period = period.toFixed(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (period &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      period = -period;</span><br><span class="line">      event.location = <span class="string">"⏱延期"</span> + period + <span class="string">"天完成"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (period == <span class="number">0</span>) &#123;</span><br><span class="line">      event.location = <span class="string">"⏱准时完成"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      event.location = <span class="string">"⏱提前"</span> + period + <span class="string">"天完成"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="comment">//未完成事项</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> nowtime = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="keyword">var</span> period = (reminder.dueDate - nowtime) / <span class="number">1000</span> / <span class="number">3600</span> / <span class="number">24</span>;</span><br><span class="line">    period = period.toFixed(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">//console.log(reminder.title+(period))</span></span><br><span class="line">    <span class="keyword">if</span> (period &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      event.location = <span class="string">"⏱延期"</span> + (-period) + <span class="string">"天"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      event.location = <span class="string">"⏱还剩"</span> + period + <span class="string">"天"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Script.complete();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 首先，定义了一个变量 dur_month，它被设置为1。这个变量可能用于计算日期范围。</span></span><br><span class="line"><span class="comment">// 接下来，创建了两个日期对象 startDate 和 endDate，它们表示日历的开始时间和结束时间。这些日期根据 dur_month 进行调整。</span></span><br><span class="line"><span class="comment">// 代码使用了 await 关键字来等待获取日历事件和提醒事件的数据。它使用 Calendar.forEvents() 和 Calendar.forReminders() 方法来获取事件和提醒的列表。</span></span><br><span class="line"><span class="comment">// 通过比较提醒和事件的标题，创建了一个名为 titles 的数组，其中包含在日历和提醒中都存在的标题。这个数组用于筛选出共有的事件和提醒。</span></span><br><span class="line"><span class="comment">// 接下来，对事件和提醒的列表进行过滤，只保留 titles 数组中存在的事件和提醒。</span></span><br><span class="line"><span class="comment">// 创建了一个空对象 reminder_map，用于将提醒的标题映射到提醒对象。</span></span><br><span class="line"><span class="comment">// 使用正则表达式 reg 匹配提醒和事件的备注，以提取提醒的唯一标识符。</span></span><br><span class="line"><span class="comment">// 遍历事件列表，处理每个事件的逻辑。根据事件标题的前缀（"✅" 或 "☑️"），确定事件是否已完成，并提取纯标题。然后，检查是否存在相应的提醒。如果不存在，创建新的提醒，并将其关联到事件上。如果存在，更新现有的提醒。</span></span><br><span class="line"><span class="comment">// 最后，根据提醒的状态更新事件标题，并将提醒的标识符添加到事件的备注中。还有一些与事件位置相关的逻辑。</span></span><br><span class="line"><span class="comment">// 最后，使用 Script.complete() 结束脚本的执行。</span></span><br></pre></td></tr></table></figure>  </p></details><h3 id="自动同步ios提醒事项到日历？简单-看这里-作者：crazy-根据汀力-你说"><a href="https://zhuanlan.zhihu.com/p/539872086" target="_blank" rel="noopener">自动同步iOS提醒事项到日历？简单，看这里！  【作者：crazy】 （根据汀力+你说）</a></h3><h2 id="我的改动和代码">我的改动和代码</h2><p>根据<a href="https://zhuanlan.zhihu.com/p/169566930" target="_blank" rel="noopener">汀力</a>最新的那篇，发现了几个和我自己需求不符合的点：</p><ul><li>从reminder 新建到calendar的event默认1小时<ul><li>在calendar中修改event的开始时间和结束时间，执行脚本后会被重新改成reminder的开始时间，结束时间固定为1小时。</li></ul></li><li>reminder 里面删除后，calendar里面还有（不会被删除）<ul><li>这个是个bug?看代码里面是有这个逻辑的</li></ul></li></ul><p>我的需求和修改</p><ul><li>如果calendar 已有reminder相同title的event，不update，所以可以在calendar中修改event的开始时间和结束时间<ul><li>如果calendar里面已经有event了，修改reminder里面的时间为calendar event的开始时间间</li></ul></li><li>【已完成】 不会变成全天任务， 仍然是有开始时间和结束时间</li></ul><!-- <details>  <summary><b>点击展开代码3</b></summary>  <p> --><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> dur_month = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> startDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">startDate.setMonth(startDate.getMonth() - dur_month);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`日历的开始时间 <span class="subst">$&#123;startDate.toLocaleDateString()&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> endDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">endDate.setMonth(endDate.getMonth() + dur_month);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`日历的结束时间 <span class="subst">$&#123;endDate.toLocaleDateString()&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> reminders = <span class="keyword">await</span> Reminder.allDueBetween(startDate, endDate);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`获取 <span class="subst">$&#123;reminders.length&#125;</span> 条提醒事项`</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> calendar = <span class="keyword">await</span> Calendar.forEvents();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取日历名和对应的日历</span></span><br><span class="line"><span class="keyword">var</span> m_dict = &#123;&#125;;</span><br><span class="line"><span class="keyword">for</span> (cal <span class="keyword">of</span> calendar) &#123;</span><br><span class="line">  m_dict[cal.title] = cal;</span><br><span class="line">  <span class="comment">// console.log(`日历:$&#123;cal.title&#125;`)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> events = <span class="keyword">await</span> CalendarEvent.between(startDate, endDate, calendar);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`获取 <span class="subst">$&#123;events.length&#125;</span> 条日历`</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reminders_id_set = <span class="keyword">new</span> <span class="built_in">Set</span>(reminders.map(<span class="function">(<span class="params">e</span>) =&gt;</span> e.identifier));</span><br><span class="line"><span class="comment">// 删除日历里提醒事项删除的事项</span></span><br><span class="line">events_created = events.filter(</span><br><span class="line">  (e) =&gt; e.notes != <span class="literal">null</span> &amp;&amp; e.notes.includes(<span class="string">"[Reminder]"</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> event <span class="keyword">of</span> events_created) &#123;</span><br><span class="line">  <span class="comment">// console.warn(event.notes)</span></span><br><span class="line">  <span class="keyword">let</span> reg = <span class="regexp">/(\[Reminder\])\s([A-Z0-9\-]*)/</span>;</span><br><span class="line">  <span class="keyword">let</span> r = event.notes.match(reg);</span><br><span class="line">  <span class="comment">// if(r) console.log(r[2])</span></span><br><span class="line">  <span class="keyword">if</span> (!reminders_id_set.has(r[<span class="number">2</span>])) &#123;</span><br><span class="line">    event.remove();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> reminder <span class="keyword">of</span> reminders) &#123;</span><br><span class="line">  <span class="comment">// reminder的标识符</span></span><br><span class="line">  <span class="keyword">const</span> targetNote = <span class="string">`[Reminder] <span class="subst">$&#123;reminder.identifier&#125;</span>`</span>;</span><br><span class="line">  <span class="keyword">const</span> [targetEvent] = events.filter(</span><br><span class="line">    (e) =&gt; e.notes != <span class="literal">null</span> &amp;&amp; e.notes.includes(targetNote)</span><br><span class="line">  ); <span class="comment">// 过滤重复的reminder</span></span><br><span class="line">  <span class="keyword">if</span> (!m_dict[reminder.calendar.title]) &#123;</span><br><span class="line">    <span class="built_in">console</span>.warn(<span class="string">"找不到日历"</span> + reminder.calendar.title);</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (targetEvent) &#123;</span><br><span class="line">    <span class="comment">// console.log(`找到已经创建的事项 $&#123;reminder.title&#125;`)</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// LYK 替换updateEvent为updateReminder</span></span><br><span class="line">    <span class="comment">// updateEvent(targetEvent, reminder);</span></span><br><span class="line">    updateReminder(targetEvent, reminder);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.warn(<span class="string">`创建事项 <span class="subst">$&#123;reminder.title&#125;</span> 到 <span class="subst">$&#123;reminder.calendar.title&#125;</span>`</span>);</span><br><span class="line">    <span class="keyword">const</span> newEvent = <span class="keyword">new</span> CalendarEvent();</span><br><span class="line">    newEvent.notes = targetNote + <span class="string">"\n"</span> + reminder.notes; <span class="comment">// 要加入备注</span></span><br><span class="line">    updateEvent(newEvent, reminder);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Script.complete();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateEvent</span>(<span class="params">event, reminder</span>) </span>&#123;</span><br><span class="line">  event.title = <span class="string">`<span class="subst">$&#123;reminder.title&#125;</span>`</span>;</span><br><span class="line">  cal_name = reminder.calendar.title;</span><br><span class="line">  cal = m_dict[cal_name];</span><br><span class="line">  event.calendar = cal;</span><br><span class="line">  <span class="comment">// console.warn(event.calendar.title)</span></span><br><span class="line">  <span class="comment">// 已完成事项</span></span><br><span class="line">  <span class="keyword">if</span> (reminder.isCompleted) &#123;</span><br><span class="line">    event.title = <span class="string">`✅<span class="subst">$&#123;reminder.title&#125;</span>`</span>;</span><br><span class="line">    <span class="comment">//    event.isAllDay = false</span></span><br><span class="line">    <span class="comment">//     event.startDate = reminder.dueDate</span></span><br><span class="line">    <span class="comment">//   event.endDate=reminder.dueDate</span></span><br><span class="line">    <span class="comment">//    var ending = new Date(reminder.completionDate)</span></span><br><span class="line">    <span class="comment">//    ending.setHours(ending.getHours()+1)</span></span><br><span class="line">    <span class="comment">//    event.endDate = ending</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> period =</span><br><span class="line">      (reminder.dueDate - reminder.completionDate) / <span class="number">1000</span> / <span class="number">3600</span> / <span class="number">24</span>;</span><br><span class="line">    period = period.toFixed(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (period &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      period = -period;</span><br><span class="line">      event.location = <span class="string">" 延期"</span> + period + <span class="string">"天完成"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (period == <span class="number">0</span>) &#123;</span><br><span class="line">      event.location = <span class="string">" 准时完成"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      event.location = <span class="string">" 提前"</span> + period + <span class="string">"天完成"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 未完成事项</span></span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> nowtime = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="keyword">var</span> period = (reminder.dueDate - nowtime) / <span class="number">1000</span> / <span class="number">3600</span> / <span class="number">24</span>;</span><br><span class="line">    period = period.toFixed(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// console.log(reminder.title+(period))</span></span><br><span class="line">    <span class="keyword">if</span> (period &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">// 待办顺延</span></span><br><span class="line"></span><br><span class="line">      event.location = <span class="string">" 延期"</span> + -period + <span class="string">"天"</span>;</span><br><span class="line">      <span class="comment">// 如果不是在同一天,设置为全天事项</span></span><br><span class="line">      <span class="keyword">if</span> (reminder.dueDate.getDate() != nowtime.getDate()) &#123;</span><br><span class="line">        event.title = <span class="string">`❌<span class="subst">$&#123;reminder.title&#125;</span>`</span>;</span><br><span class="line">        event.startDate = nowtime;</span><br><span class="line">        event.endDate = nowtime;</span><br><span class="line">        event.isAllDay = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 在同一天的保持原来的时间</span></span><br><span class="line">      <span class="keyword">else</span> &#123;</span><br><span class="line">        event.title = <span class="string">`⭕️<span class="subst">$&#123;reminder.title&#125;</span>`</span>;</span><br><span class="line">        event.isAllDay = <span class="literal">false</span>;</span><br><span class="line">        event.startDate = reminder.dueDate;</span><br><span class="line">        <span class="keyword">var</span> ending = <span class="keyword">new</span> <span class="built_in">Date</span>(reminder.dueDate);</span><br><span class="line">        ending.setHours(ending.getHours() + <span class="number">1</span>);</span><br><span class="line">        event.endDate = ending;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">`【<span class="subst">$&#123;reminder.title&#125;</span>】待办顺延<span class="subst">$&#123;-period&#125;</span>天`</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      event.title = <span class="string">`⭕️<span class="subst">$&#123;reminder.title&#125;</span>`</span>;</span><br><span class="line">      event.isAllDay = <span class="literal">false</span>;</span><br><span class="line">      event.location = <span class="string">"还剩"</span> + period + <span class="string">"天"</span>;</span><br><span class="line">      event.startDate = reminder.dueDate;</span><br><span class="line">      <span class="keyword">var</span> ending = <span class="keyword">new</span> <span class="built_in">Date</span>(reminder.dueDate);</span><br><span class="line">      ending.setHours(ending.getHours() + <span class="number">1</span>);</span><br><span class="line">      event.endDate = ending;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!reminder.dueDateIncludesTime) event.isAllDay = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  event.save();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// LYK 新加的方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateReminder</span>(<span class="params">event, reminder</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 方法1</span></span><br><span class="line">  <span class="keyword">if</span> (reminder) &#123;</span><br><span class="line">    <span class="comment">// 更新 Reminder 的开始时间</span></span><br><span class="line">    reminder.dueDate = event.startDate;</span><br><span class="line">    <span class="comment">// 保存 Reminder 更新</span></span><br><span class="line">    reminder.save();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!--   </p></details> --><details>  <summary>点击展开"LYK 方法2 EventKit方法"</summary>  <p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// LYK 创建 EventKit 实例</span></span><br><span class="line"><span class="keyword">const</span> EventKit = <span class="built_in">require</span>(<span class="string">"EventKit"</span>);</span><br><span class="line"><span class="keyword">const</span> eventKit = EventKit.init();</span><br><span class="line"></span><br><span class="line"><span class="comment">// LYK 方法2 EventKit方法</span></span><br><span class="line"><span class="comment">// 添加事件修改监听器</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> event <span class="keyword">of</span> events) &#123;</span><br><span class="line">    event.onStartDateChange(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 在这里实现日历事件开始时间更改时的同步操作</span></span><br><span class="line">      <span class="comment">// 可以获取修改后的开始时间，然后更新对应的 Reminder 提醒</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 找到对应的 Reminder</span></span><br><span class="line">      <span class="keyword">const</span> targetNote = <span class="string">`[Reminder] <span class="subst">$&#123;event.notes</span></span></span><br><span class="line"><span class="string"><span class="subst">        .split(<span class="string">"\n"</span>)[<span class="number">0</span>]</span></span></span><br><span class="line"><span class="string"><span class="subst">        .substring(<span class="number">10</span>)&#125;</span>`</span>;</span><br><span class="line">      <span class="keyword">const</span> reminderToUpdate = reminders.find(</span><br><span class="line">        (reminder) =&gt; reminder.identifier === targetNote</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (reminderToUpdate) &#123;</span><br><span class="line">        <span class="comment">// 更新 Reminder 的开始时间</span></span><br><span class="line">        reminderToUpdate.dueDate = event.startDate;</span><br><span class="line">        <span class="comment">// 保存 Reminder 更新</span></span><br><span class="line">        eventKit.saveReminder(reminderToUpdate, (error) =&gt; &#123;</span><br><span class="line">          <span class="keyword">if</span> (!error) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">`已同步更新 Reminder 的开始时间为 <span class="subst">$&#123;event.startDate&#125;</span>`</span>);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.error(<span class="string">`更新 Reminder 失败：<span class="subst">$&#123;error&#125;</span>`</span>);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    event.onEndDateChange(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 在这里实现日历事件结束时间更改时的同步操作</span></span><br><span class="line">      <span class="comment">// 可以获取修改后的结束时间，然后更新对应的 Reminder 提醒</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 找到对应的 Reminder</span></span><br><span class="line">      <span class="keyword">const</span> targetNote = <span class="string">`[Reminder] <span class="subst">$&#123;event.notes</span></span></span><br><span class="line"><span class="string"><span class="subst">        .split(<span class="string">"\n"</span>)[<span class="number">0</span>]</span></span></span><br><span class="line"><span class="string"><span class="subst">        .substring(<span class="number">10</span>)&#125;</span>`</span>;</span><br><span class="line">      <span class="keyword">const</span> reminderToUpdate = reminders.find(</span><br><span class="line">        (reminder) =&gt; reminder.identifier === targetNote</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (reminderToUpdate) &#123;</span><br><span class="line">        <span class="comment">// 更新 Reminder 的结束时间</span></span><br><span class="line">        reminderToUpdate.dueDate = event.endDate;</span><br><span class="line">        <span class="comment">// 保存 Reminder 更新</span></span><br><span class="line">        eventKit.saveReminder(reminderToUpdate, (error) =&gt; &#123;</span><br><span class="line">          <span class="keyword">if</span> (!error) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">`已同步更新 Reminder 的结束时间为 <span class="subst">$&#123;event.endDate&#125;</span>`</span>);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.error(<span class="string">`更新 Reminder 失败：<span class="subst">$&#123;error&#125;</span>`</span>);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>  </p></details><h2 id="参考文章">参考文章</h2><ul><li>【ios】日历同步—》提醒事项 单向同步+打卡功能 【作者：汀力】<ul><li><a href="https://zhuanlan.zhihu.com/p/390100397" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/390100397</a> 2021.7</li><li><a href="https://zhuanlan.zhihu.com/p/169566930" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/169566930</a> 2022.9.17</li></ul></li><li>最完美(ios)提醒事项与日历  双向同步+带跳转  【作者：你说】（根据汀力）<ul><li><a href="https://zhuanlan.zhihu.com/p/512921323" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/512921323</a> 2022.8</li><li><a href="https://zhuanlan.zhihu.com/p/558267163" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/558267163</a> 2022.9.19</li></ul></li><li>自动同步iOS提醒事项到日历？简单，看这里！  【作者：crazy】 （根据汀力+你说）<ul><li><a href="https://zhuanlan.zhihu.com/p/539872086" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/539872086</a>  2022.7</li></ul></li><li><a href="https://zhuanlan.zhihu.com/p/335275758" target="_blank" rel="noopener">将 iOS 上的提醒事项同步到微软日历</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Accessibility-WCAG 2.1 Reflow (400% zoom)</title>
    <link href="http://liyuankun.top/Accessibility-WCAG-2-1-Reflow-400-zoom.html"/>
    <id>http://liyuankun.top/Accessibility-WCAG-2-1-Reflow-400-zoom.html</id>
    <published>2023-08-15T05:50:52.000Z</published>
    <updated>2025-08-11T09:22:24.703Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>基于 WCAG 2.1 Reflow (400% zoom) 标准不太好理解的情况，找到了一些 W3C 委员会对它的讨论和解释。</p><ul><li><a href="https://github.com/w3c/wcag/issues/1050" target="_blank" rel="noopener">Change 1.4.10 Reflow to level A</a></li><li><a href="https://github.com/w3c/wcag/issues/987" target="_blank" rel="noopener">SC 1.4.10: What is the minimum height for vertically scrolling content?</a></li><li><a href="https://github.com/w3c/wcag/issues/1188" target="_blank" rel="noopener">WCAG 2.1 Understanding 1.4.10 Reflow - additional clarifications</a></li></ul><h2 id="总结">总结</h2><p>讨论中也没有明确提及一个推荐测试用的固定分辨率，但可以确定的是我们不必一直在 320<em>256 下测试，可以适当放宽一些要求，比如测试 320</em>480。<br>480 是把现在最常见的 1920*1080 分辨率显示器竖直放置后由长边 1920 施加 400% 缩放得到的。<br>480 并未直接出现上面的讨论中，读完讨论结合实际情况理解得来的，如果考虑使用更大的高度来测试应该也可以，但不能确保那仍是符合规范的。</p><h2 id="responsive-模式测试问题">responsive 模式测试问题</h2><p>测 Reflow 的时候直接用浏览器的 devtools 的 responsive 模式测试可能会以 mobile 的形式渲染导致测不到一些 desktop 特有的问题，这里贴一下解决方法</p><p>The user Agent String:</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/<span class="number">5.0</span> (Macintosh; Intel Mac OS X <span class="number">10</span>_15_7) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">117.0</span><span class="number">.0</span><span class="number">.0</span> Safari/<span class="number">537.36</span></span><br></pre></td></tr></table></figure><iframe width="560" height="315" src="https://www.youtube.com/embed/3NlmMmb1ka4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="TECH" scheme="http://liyuankun.top/categories/TECH/"/>
    
      <category term="FrontEnd" scheme="http://liyuankun.top/categories/TECH/FrontEnd/"/>
    
      <category term="Accessibility" scheme="http://liyuankun.top/categories/TECH/FrontEnd/Accessibility/"/>
    
    
  </entry>
  
  <entry>
    <title>pip3 install 成功- import requests仍找不到module:ModuleNotFoundError</title>
    <link href="http://liyuankun.top/pip3-install-%E6%88%90%E5%8A%9F-import-requests%E4%BB%8D%E6%89%BE%E4%B8%8D%E5%88%B0module-ModuleNotFoundError.html"/>
    <id>http://liyuankun.top/pip3-install-成功-import-requests仍找不到module-ModuleNotFoundError.html</id>
    <published>2023-08-08T14:56:42.000Z</published>
    <updated>2025-08-11T09:22:24.731Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="modulenotfounderror-报错">ModuleNotFoundError 报错</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装requests成功 -------------</span></span><br><span class="line">pip3 install requests</span><br><span class="line">Requirement already satisfied: requests <span class="keyword">in</span> /Users/yuanli/anaconda3/lib/python3.10/site-packages (2.28.1)</span><br><span class="line">Requirement already satisfied: certifi&gt;=2017.4.17 <span class="keyword">in</span> /Users/yuanli/anaconda3/lib/python3.10/site-packages (from requests) (2022.12.7)</span><br><span class="line">Requirement already satisfied: urllib3&lt;1.27,&gt;=1.21.1 <span class="keyword">in</span> /Users/yuanli/anaconda3/lib/python3.10/site-packages (from requests) (1.26.14)</span><br><span class="line">Requirement already satisfied: charset-normalizer&lt;3,&gt;=2 <span class="keyword">in</span> /Users/yuanli/anaconda3/lib/python3.10/site-packages (from requests) (2.0.4)</span><br><span class="line">Requirement already satisfied: idna&lt;4,&gt;=2.5 <span class="keyword">in</span> /Users/yuanli/anaconda3/lib/python3.10/site-packages (from requests) (3.4)</span><br><span class="line"><span class="comment"># 安装requests成功 -------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用import requests来验证，结果报错：仍然找不到requests module</span></span><br><span class="line">python3</span><br><span class="line">Python 3.10.8 (main, Oct 13 2022, 09:48:40) [Clang 14.0.0 (clang-1400.0.29.102)] on darwin</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; import requests</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line 1, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">ModuleNotFoundError: No module named <span class="string">'requests</span></span><br></pre></td></tr></table></figure><h2 id="解决方法">解决方法</h2><p>错误消息&quot;ModuleNotFoundError: 找不到名为 ‘requests’ 的模块&quot;发生的原因是Python解释器无法找到 ‘requests’ 模块，尽管已经使用pip3进行了安装。<br>这个问题通常出现在系统上有多个Python安装，并且pip3安装与当前使用的Python版本不一致。</p><p>当运行Python解释器时，它显示正在使用Python 3.10.8。虽然补丁版本的差异（3.10.8与3.10）可能不是问题的原因，但是仍然值得检查pip3和python3是否引用相同的Python版本。</p><p>要解决这个问题，可以尝试以下步骤：</p><ol><li>验证与pip3关联的Python版本：<code>pip3 --version</code></li><li>检查Python路径：<br>运行以下命令以检查Python解释器和pip3的路径：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> python3</span><br><span class="line"><span class="built_in">which</span> pip3</span><br></pre></td></tr></table></figure><p>尝试之后发现果然pip3 和 python3 对应的不是用一个python</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pip3 使用的是anaconda3里面带的pip3</span></span><br><span class="line">/Users/yuanli/anaconda3/bin/pip3</span><br><span class="line"><span class="comment"># python3 用的是hombrew里面安装的python</span></span><br><span class="line">python3: aliased to /opt/homebrew/Cellar/python@3.10/3.10.8/bin/python3.10</span><br></pre></td></tr></table></figure><ol start="3"><li>修改<code>~/.bash_profile</code>里面python3的路径</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据anaconda版本可能是/anaconda 或者/anaconda2 或者/anaconda3 目录名</span></span><br><span class="line"><span class="built_in">alias</span> python3=/Users/yuanli/anaconda3/bin/python <span class="comment"># yuanli修改为你的机器名</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="TECH" scheme="http://liyuankun.top/categories/TECH/"/>
    
      <category term="Language" scheme="http://liyuankun.top/categories/TECH/Language/"/>
    
      <category term="Python" scheme="http://liyuankun.top/categories/TECH/Language/Python/"/>
    
    
      <category term="Command line" scheme="http://liyuankun.top/tags/Command-line/"/>
    
      <category term="Python" scheme="http://liyuankun.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>安装/使用/卸载Anaconda</title>
    <link href="http://liyuankun.top/%E5%AE%89%E8%A3%85-%E4%BD%BF%E7%94%A8-%E5%8D%B8%E8%BD%BDAnaconda.html"/>
    <id>http://liyuankun.top/安装-使用-卸载Anaconda.html</id>
    <published>2023-08-08T13:53:39.000Z</published>
    <updated>2025-08-11T09:22:24.733Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="安装anaconda">安装Anaconda</h2><p><a href="https://www.anaconda.com/download" target="_blank" rel="noopener">Anaconda官网下载</a></p><p>如果下载网速过慢，可以使用清华大学镜像：</p><ul><li>下载列表：<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a></li><li>使用说明：<a href="https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/</a></li></ul><h2 id="卸载anaconda">卸载Anaconda</h2><ul><li><a href="https://docs.anaconda.com/free/anaconda/install/uninstall/" target="_blank" rel="noopener">Anaconda官方卸载方法-英文版</a></li><li><a href="https://anaconda.org.cn/anaconda/install/uninstall/" target="_blank" rel="noopener">Anaconda官方卸载方法-中文版</a></li></ul><h3 id="step1-彻底卸载anaconda">Step1 彻底卸载Anaconda</h3><ol><li>安装 Anaconda-Clean package</li></ol><p>打开 Anaconda Prompt 或者命令行， 输入如下命令：</p><figure class="highlight plain"><figcaption><span>install anaconda-clean```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">如果安装失败，参考[如何完全卸载Anaconda（如何下载Anaconda-Clean package）](https://developer.aliyun.com/article/936211)</span><br><span class="line"></span><br><span class="line">- 删除`.condarc`文件里面的内容（不是删文件）</span><br><span class="line">  - [MacOS] `~/.condarc`</span><br><span class="line">  - [Window]C盘下`.condarc`</span><br><span class="line">- 重新`conda install anaconda-clean`</span><br><span class="line"></span><br><span class="line">2. 输入如下命令卸载</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line"># If you want to confirm each file and directory you are deleting</span><br><span class="line">anaconda-clean</span><br><span class="line"></span><br><span class="line"># If you don&apos;t want to be asked about each file and directory</span><br><span class="line">anaconda-clean --yes</span><br></pre></td></tr></table></figure><h3 id="step2-简单移除anaconda文件">Step2 简单移除Anaconda文件</h3><h4 id="macos">MacOS</h4><p>Open your terminal application.<br>Remove your entire Anaconda directory with <code>rm -rf</code>. Depending on your installation, your anaconda2 or anaconda3 directory will be in your root folder or in your opt folder.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The following are a few examples of how you may need to delete your Anaconda folder</span></span><br><span class="line">rm -rf anaconda3</span><br><span class="line">rm -rf ~/anaconda3</span><br><span class="line">rm -rf ~/opt/anaconda3</span><br></pre></td></tr></table></figure><p>Close and reopen your terminal to refresh it. You should no longer see (base) in your terminal prompt.</p><h3 id="step3-removing-anaconda-path-from-bash-profile">Step3 Removing Anaconda path from <code>.bash_profile</code></h3><p>If you use Linux or macOS, you may also wish to check your <code>.bash_profile</code> or <code>.zprofile</code> file in your home directory for a line such as:<br><code>export PATH=&quot;/Users/yourname/anaconda3/bin:$PATH&quot;</code></p><h2 id="参考文章">参考文章</h2><ul><li><a href="https://mp.weixin.qq.com/s/vIZoE4BmXYlyhfFFmlhDWg" target="_blank" rel="noopener">Anaconda 介绍、安装及使用保姆级教程</a></li><li>[PyCharm 安装 NumPy，SciPy 等科学计算包 （Anaconda）for mac OS X](<a href="https://blog.csdn.net/muzilanlan/article/details/50479931" target="_blank" rel="noopener">https://blog.csdn.net/muzilanlan/article/details/50479931</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="TECH" scheme="http://liyuankun.top/categories/TECH/"/>
    
      <category term="Language" scheme="http://liyuankun.top/categories/TECH/Language/"/>
    
      <category term="Python" scheme="http://liyuankun.top/categories/TECH/Language/Python/"/>
    
    
      <category term="Command line" scheme="http://liyuankun.top/tags/Command-line/"/>
    
      <category term="Python" scheme="http://liyuankun.top/tags/Python/"/>
    
  </entry>
  
</feed>
